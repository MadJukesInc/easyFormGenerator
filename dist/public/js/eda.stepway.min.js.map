{
  "version": 3,
  "sources": [
    "eda.stepway.min.js"
  ],
  "names": [
    "easyFromConfigFct",
    "easyFormSteWayConfigProvider",
    "setModalAnimation",
    "formlyConfigFct",
    "formlyConfigProvider",
    "camelize",
    "string",
    "replace",
    "match",
    "chr",
    "toUpperCase",
    "toLowerCase",
    "setType",
    "name",
    "template",
    "subTitleTemplate",
    "basicSelectTemplate",
    "groupedSelectTemplate",
    "attributes",
    "bindings",
    "ngModelAttrs",
    "angular",
    "forEach",
    "attr",
    "attribute",
    "binding",
    "bound",
    "wrapper",
    "controller",
    "$scope",
    "open",
    "$event",
    "preventDefault",
    "stopPropagation",
    "opened",
    "defaultOptions",
    "templateOptions",
    "addonLeft",
    "class",
    "onClick",
    "options",
    "scope",
    "isOpen",
    "onFocus",
    "$viewValue",
    "$modelValue",
    "to",
    "datepickerOptions",
    "setWrapper",
    "join",
    "module",
    "value",
    "config",
    "$inject",
    "run",
    "$templateCache",
    "put",
    "$translateProvider",
    "translations",
    "SAY_HI",
    "EDIT_TAB",
    "PREVIEW_TAB",
    "WIZARD_LINES",
    "WIZARD_LAYOUT",
    "WIZARD_CONTROLS",
    "WIZARD_SAVE",
    "PAGER_PREVIOUS",
    "PAGER_NEXT",
    "COMMAND_PANEL",
    "VISUAL_PANEL",
    "ADD_NEW_LINE",
    "SELECTED_LINE",
    "NUMBER_OF_COLUMN",
    "APPLY_CTRL2COL",
    "CLIC_TAP_2_OPEN",
    "SELECT_2_APPLY_COL",
    "CUSTOM_SUBMIT_BTN",
    "CUSTOM_CANCEL_BTN",
    "NAME_THIS_FORM",
    "SAVE_THIS_FORM",
    "FINAL_STEP",
    "DATA_MODEL",
    "FIELDS_MODEL",
    "SELECT_A_CTRL",
    "SELECT_CTRL_IN_LIST",
    "COL_WILL_BE_BLANK",
    "EDIT_PROPERTIES",
    "HEADER_TEXT",
    "ADD_EDIT_HEADER_HERE",
    "SUBTITLE_TEXT",
    "ADD_EDIT_SUBTIL_HERE",
    "LABEL_TEXT",
    "ADD_EDIT_LABEL_HERE",
    "PLACEHOLDER",
    "ADD_EDIT_PLACEHOLD",
    "REQUIRED",
    "DESCRIPTION",
    "ADDEDIT_DESCRIPTION",
    "DATE_FORMAT",
    "ADD_NEW_RADIO",
    "ADD_RADIO_PLACEHOLD",
    "EDIT_REMOVE_RADIO",
    "NO_RADIO_ADD_NEW",
    "SEARCH_4_OPTION",
    "ADD",
    "ORDER",
    "OPTION",
    "GROUP",
    "ADD_NEW_OPTIONS",
    "ADD_A_NEW_OPTION",
    "EDIT_REMOVE_OPTIONS",
    "NO_OPTION_ADD_NEW",
    "ADD_NEW_GROUPS",
    "ADD_A_NEW_GROUP",
    "EDIT_GROUPS_OPTIONS",
    "NO_GROUP_ADD_NEW",
    "OK",
    "CANCEL",
    "easyFormSteWayConfigFct",
    "defaultConfig",
    "_defaultConfiguration",
    "modalAnimated",
    "getDefaultshowPreviewPanel",
    "getDefaultShowPreviewModel",
    "controlsList",
    "controls",
    "enabled",
    "flagConfig",
    "valueToApply",
    "_configuration",
    "getModalAnimation",
    "getEnabledControls",
    "_controlsList",
    "disableControl",
    "controlName",
    "isString",
    "aControl",
    "showPreviewPanel",
    "wantToShow",
    "isDefined",
    "_showPreviewPanel",
    "showPreviewModels",
    "_showPreviewModels",
    "enableControl",
    "getDefaultLanguage",
    "lang",
    "initDefaultLanguage",
    "useSanitizeValueStrategy",
    "fallbackLanguage",
    "_defaultLanguage",
    "preferredLanguage",
    "setDefaultLanguage",
    "_currentLanguage",
    "setLanguage",
    "language",
    "getCurrentLanguage",
    "easyFormSteWayConfig",
    "$translate",
    "getModalAnimationValue",
    "setModalAnimationFct",
    "getListEnabledControl",
    "copy",
    "isPreviewPanelVisible",
    "arePreviewModelsVisible",
    "switchLanguage",
    "use",
    "service",
    "this",
    "$get",
    "configuration",
    "provider",
    "ngwfMainController",
    "$timeout",
    "FormNameAsTest",
    "ngwfWfEditController",
    "easyFormGenVersion",
    "$filter",
    "$anchorScroll",
    "toaster",
    "$uibModal",
    "$log",
    "formFieldManage",
    "controllerModalProxy",
    "initDebugModel",
    "showDebug",
    "configurationModelNumberofLines",
    "initTabModel",
    "editTab",
    "active",
    "previewTab",
    "previewExistingform",
    "formlyform",
    "configlines",
    "JSON",
    "parse",
    "formlyField",
    "configurationLoaded",
    "bindConfigurationLines",
    "applyConfigurationToformlyModel",
    "previewLoadedForm",
    "fieldsModel",
    "vm",
    "model",
    "wfFormFieldsOnlyNeededProperties",
    "wfFormFields",
    "cancelButtonText",
    "submitButtonText",
    "onSubmit",
    "pop",
    "type",
    "timeout",
    "title",
    "body",
    "showCloseButton",
    "initColumnTemplate",
    "numColumn",
    "exist",
    "control",
    "key",
    "subtype",
    "initLineTemplate",
    "line",
    "activeColumn",
    "columns",
    "resetToZeroModel",
    "activeLine",
    "lines",
    "length",
    "splice",
    "countConfigurationModelLines",
    "debug",
    "setActiveLineNumber",
    "lineNumber",
    "upThisLine",
    "indexLine",
    "currentLineObj",
    "downThisLine",
    "addNewline",
    "push",
    "removeThisLine",
    "index",
    "increaseNumberOfColumns",
    "MaxNumberOfColumns",
    "newNumberOfColumns",
    "decreaseNumberOfColumns",
    "resetStepCounter",
    "configStepCounter",
    "nextConfigStep",
    "configStepCounterMAX",
    "listConfigStep",
    "setTrueThisStepIndicator",
    "previousConfigStep",
    "stepReachable",
    "indexStep",
    "showModalAddCtrlToColumn",
    "size",
    "numcolumn",
    "modalInstance",
    "animation",
    "animationsEnabled",
    "templateUrl",
    "resolve",
    "nyaSelect",
    "getNyASelectFromSelectedLineColumn",
    "result",
    "then",
    "modalAddCtrlModel",
    "bindConfigurationModelFromModalReturn",
    "loadExistingFormsAsList",
    "saveThisForm",
    "formName",
    "clear",
    "resetAllIndicators",
    "i",
    "stepIndicators",
    "indexIndicator",
    "easyFormGeneratorVERSION",
    "tab",
    "numberOfColumns",
    "MinNumberOfColumns",
    "columnTemplate",
    "lineTemplate",
    "loadExistingFormsList",
    "formlyList",
    "initConfigurationEditFromScratch",
    "initNyaSelect",
    "ngwfWfEditMODALController",
    "$uibModalInstance",
    "selectOptionManage",
    "initNyaSelectFiltered",
    "nyaSelectFiltered",
    "listCtrl",
    "concat",
    "getFilteredNyaSelectObject",
    "extend",
    "selectedControl",
    "temporyConfig",
    "addNewOptionRadio",
    "radioRowCollection",
    "newOptionRadio",
    "saisie",
    "resultFlag",
    "details",
    "removeRadioRow",
    "removeOption",
    "upThisRadioRow",
    "upthisOption",
    "downThisRadioRow",
    "downthisOption",
    "addNewOptionBasicSelect",
    "basicSelectRowCollection",
    "newOptionBasicSelect",
    "removeRow",
    "upThisRow",
    "downThisRow",
    "showGroupListToChoose",
    "groupSelectGroupClick",
    "showList",
    "addNewGroupToGroupedSelect",
    "newGroupGroupedSelect",
    "GroupedSelectGroups",
    "list",
    "addNewOptionGroupedSelect",
    "groupedSelectRowCollection",
    "newOptionGroupedSelect",
    "removeGroupedSelectRow",
    "upThisGroupedSelectRow",
    "downThisGroupedSelectRow",
    "today",
    "demodt",
    "dt",
    "Date",
    "openfct",
    "dateOptionsInit",
    "formatYear",
    "startingDay",
    "showWeeks",
    "initDate",
    "selectThisControl",
    "resetTemporyConfig",
    "id",
    "initDatePicker",
    "okfct",
    "bindBasicSelectToNya",
    "bindGroupedSelectToNya",
    "bindRadioToNya",
    "applyConfigToSelectedControl",
    "close",
    "cancelfct",
    "dismiss",
    "bindRadioFromNYA",
    "formlyOptions",
    "newOption",
    "option",
    "order",
    "group",
    "rows",
    "resetNyASelectOptions",
    "bindBasicSelectFromNYA",
    "bindGroupedSelectFromNYA",
    "filteredgroup",
    "_",
    "uniq",
    "pluck",
    "datepickerPopup",
    "formats",
    "initNyaSelectConformingSelectedControl",
    "modelNyaSelect",
    "formlyLabel",
    "formlyRequired",
    "formlyPlaceholder",
    "formlyDesciption",
    "initOptionModel",
    "dateOptions",
    "ok",
    "cancel",
    "edaStepWayEasyFormGen",
    "linkFct",
    "element",
    "attrs",
    "returnAttributeConfigurationLinesIfNotEmpty",
    "edaEasyFormGeneratorModelToReturn",
    "isArray",
    "edaEasyFormGeneratorModel",
    "edaFieldsModel",
    "emptyEdaFieldsModel",
    "emptyModel",
    "returnAttributeDataModelIfNotEmpty",
    "dataModelToReturn",
    "dataModel",
    "watchEdaEasyFormModelExpression",
    "watchEdaEasyFormModelHasChanged",
    "newValue",
    "oldValue",
    "loadExistingConfigurationModel",
    "watchReturnSaveEventExpression",
    "returnSaveEvent",
    "watchReturnSaveEventhasChanged",
    "_easyFormGeneratorModel",
    "btnSubmitText",
    "btnCancelText",
    "edaFieldsModelStringified",
    "toJson",
    "formlyFieldsModel",
    "edaSaveFormEvent",
    "refreshControlFormlyExpressionProperties",
    "refreshControlFormlyValidators",
    "refreshControlFormlyValidation",
    "$watch",
    "edaStepWayEasyFormGenCtrl",
    "_tabInitialized",
    "tabVisible",
    "modelsVisible",
    "directive",
    "restrict",
    "controllerAs",
    "link",
    "stRatio",
    "linkfct",
    "ratio",
    "css",
    "nyaSelectObj",
    "resetNyaSelect",
    "getControlsDefinition",
    "configurationModel",
    "isObject",
    "column",
    "controlIndex",
    "_controlsDefinition",
    "aControlIndex",
    "formlyType",
    "formlySubtype",
    "formlyExpressionProperties",
    "formlyValidators",
    "formlyValidation",
    "configurationObj",
    "label",
    "required",
    "description",
    "placeholder",
    "extractedProps",
    "returnControlFromAddCtrlModalModel",
    "newKey",
    "now",
    "validKeyUniqueness",
    "edited",
    "newNyaSelectObj",
    "subtitle",
    "messages",
    "viewValue",
    "modelValue",
    "defaultReturnMsg",
    "returnMsg",
    "emailShape",
    "expression",
    "test",
    "message",
    "filterDisabledControl",
    "listAllEnabledControl",
    "filteredNyaList",
    "enabledControl",
    "nyaControl",
    "CtrlModalModel",
    "modelToReturn",
    "thisKey",
    "isUnique",
    "j",
    "factory",
    "configurationModelInit",
    "Object",
    "prototype",
    "toString",
    "call",
    "configurationModelResult",
    "getMessageObject",
    "getErrorObject",
    "formlyModel",
    "formlyDataModel",
    "resetFormlyModel",
    "resetDataModel",
    "addOneColumnHeader",
    "addOneColumnControl",
    "addTwoColumnControl",
    "addThreeColumnControl",
    "resetformly",
    "lineIndex",
    "headerTemplateCol0",
    "extractTemplateOptionDescription",
    "addDatepickerPopupProperty",
    "fieldToPush",
    "extractTemplateOptionDatepickerPopup",
    "className",
    "extractTemplateOptionType",
    "extractTemplateOptionLabel",
    "extractTemplateOptionRequired",
    "extractTemplateOptionPlaceholder",
    "extractTemplateOptionOptions",
    "expressionProperties",
    "extractFormlyExpressionProperties",
    "validators",
    "extractFormlyValidators",
    "validation",
    "extractFormlyValidation",
    "headerTemplateCol1",
    "controlCol0",
    "controlCol1",
    "FieldGroup",
    "fieldGroup",
    "headerTemplateCol2",
    "controlCol2",
    "obj",
    "emptyDataModel",
    "errorTitle",
    "errorMessage",
    "messageObj",
    "noError",
    "Message",
    "messageTitle",
    "messageBody",
    "testMe",
    "initModel",
    "selectObj",
    "resetModel",
    "isOptionUnique",
    "textValue",
    "isOptionValidFormat",
    "newOptionText",
    "fullResponse",
    "checkResult",
    "validOption",
    "newOptionGroup",
    "AtIndex",
    "indexOption",
    "currentOption",
    "zeroModel"
  ],
  "mappings": "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",
  "file": "eda.stepway.min.js",
  "sourcesContent": [
    "/** \n  *easyFormGenerator — step way — version \n  *Version 1.0.33 \n  *Author : Erwan Datin (MacKentoch) \n  *Link: https://github.com/MacKentoch/easyFormGenerator \n  *License : MIT (2015) \n **/ \n ;(function(){\n \t'use strict';\n/**\n *  -----------------------------------------------------------------------\n *  application module of the step way version of easy form generator\n *  -----------------------------------------------------------------------\n *  \n *   \n *     - this version is production friendly -\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n  'use strict';\n\n  //alias module to distinguish the drag and drop way\n  angular\n    .module('eda.easyformGen.stepway', ['ngwfApp']);\n\n  angular\n    .module('ngwfApp', [  \n      'ngwfApp.core',\n      'eda.easyFormGenerator.translate',\n      'eda.easyFormSteWayConfigProvider',\n      'ngwfApp.controllers',\n      'ngwfApp.services', \n      'ngwfApp.filters',\n      'ngwfApp.directives'\n    ])\n    .value('easyFormGenVersion', 'v1.0.33')\n    .config(formlyConfigFct)\n    .config(easyFromConfigFct);\n\n\n    easyFromConfigFct.$inject = ['easyFormSteWayConfigProvider'];\n    function easyFromConfigFct(easyFormSteWayConfigProvider){\n      //enable/disable easy form modal animation \n      //HERE : disabling animation due to angular bootstrap backdrop bug with angular >= 1.4\n      easyFormSteWayConfigProvider.setModalAnimation(false);\n      \n      //disable control example :\n      //easyFormSteWayConfigProvider.disableControl('TextInput');\n      \n      //enable control example :\n      //easyFormSteWayConfigProvider.enableControl('TextInput');\n\n      //example get current language\n      //console.info('lang = ' + easyFormSteWayConfigProvider.getCurrentLanguage());\n      //example set currrent language\n      //easyFormSteWayConfigProvider.setLanguage('fr');\n      \n    }\n\n\n\n    formlyConfigFct.$inject = ['formlyConfigProvider'];\n    function formlyConfigFct(formlyConfigProvider){\n      //////////////////////////////\n      // CONFIG HERE (formly...)              \n      /////////////////////////////\n      formlyConfigProvider.setType(\n        {\n          name: 'richEditor',\n          //wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n          template: '<text-angular name=\"{{id}}\" class=\"richTextAngular\" ng-model=\"model[options.key || index]\"></text-angular>'\n        }\n      );\n\n      formlyConfigProvider.setType(\n        {\n          name: 'blank',\n          template: '<div></div>'\n        }\n      );\n\n\n      var subTitleTemplate = '<div class=\"row\"><div class=\"\"><h4 class=\"text-center\">{{options.templateOptions.placeholder}}<h4><hr/></div></div>';\n      formlyConfigProvider.setType(\n        {\n          name: 'subTitle',\n          template: subTitleTemplate\n        }\n      );\n\n      var basicSelectTemplate =   ' <ol   class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ' + \n                    '   ng-model=\"model[options.key || index]\"  ' + \n                      '   id=\"{{id}}\"  ' + \n                      '   disabled=\"options.templateOptions.options.length === 0\"> ' + \n                      '   <li class=\"nya-bs-option\" nya-bs-option=\"option in options.templateOptions.options\"> ' + \n                      '     <a>{{option.name}}</a> ' + \n                      '   </li> ' + \n                      ' </ol>     ' ;\n\n     formlyConfigProvider.setType(\n        {\n          name: 'basicSelect',\n          template: basicSelectTemplate\n        }\n      );\n\n\n     var groupedSelectTemplate =   '  <ol class=\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\" ' +\n                   '    ng-model=\"model[options.key || index]\" ' +\n                   '       data-live-search=\"true\" ' +\n                   '       disabled=\"options.templateOptions.options.length === 0\">' +\n                                 '       <li nya-bs-option=\"option in  options.templateOptions.options group by option.group\"  ' +\n                                 '       >' +\n                                 '         <span class=\"dropdown-header\">{{$group}}</span>' + \n                                 '         <a>' +\n                                 '           <span>{{option.name}}</span>' +\n                                 '           <span class=\"glyphicon glyphicon-ok check-mark\"></span>' +\n                                 '         </a>' +\n                                 '       </li>' +\n                                 '     </ol>';\n\n     formlyConfigProvider.setType(\n        {\n          name: 'groupedSelect',\n          template: groupedSelectTemplate\n        }\n      );\n\n     ////////////////////////////\n     // angular UI date picker\n     ////////////////////////////\n     // thx Kent C. Dodds\n\n      var attributes = [\n        'date-disabled',\n        'custom-class',\n        'show-weeks',\n        'starting-day',\n        'init-date',\n        'min-mode',\n        'max-mode',\n        'format-day',\n        'format-month',\n        'format-year',\n        'format-day-header',\n        'format-day-title',\n        'format-month-title',\n        'year-range',\n        'shortcut-propagation',\n        'datepicker-popup',\n        'show-button-bar',\n        'current-text',\n        'clear-text',\n        'close-text',\n        'close-on-date-selection',\n        'datepicker-append-to-body'\n      ];\n\n      var bindings = [\n        'datepicker-mode',\n        'min-date',\n        'max-date'\n      ];\n\n      var ngModelAttrs = {};\n\n      angular.forEach(attributes, function(attr) {\n        ngModelAttrs[camelize(attr)] = {attribute: attr};\n      });\n\n      angular.forEach(bindings, function(binding) {\n        ngModelAttrs[camelize(binding)] = {bound: binding};\n      });\n\n    \n\n      formlyConfigProvider.setType({\n        name: 'datepicker',\n        template: '<input  id=\"{{id}}\" class=\"form-control\" ng-click=\"open($event)\" ng-model=\"model[options.key  || index]\" is-open=\"to.isOpen\" ng-click=\"to.isOpen = true\" datepicker-options=\"to.datepickerOptions\" />',\n        wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n        controller: ['$scope', function($scope) {\n           $scope.open = function($event) {\n            $event.preventDefault();\n            $event.stopPropagation();\n            $scope.opened = true;\n          };\n         \n         }],\n        defaultOptions: {\n          ngModelAttrs: ngModelAttrs,\n          templateOptions: {\n            addonLeft: {\n              class: 'glyphicon glyphicon-calendar',\n              onClick: function(options, scope) {\n                options.templateOptions.isOpen = !options.templateOptions.isOpen;\n              }\n            },       \n            onFocus: function($viewValue, $modelValue, scope) {\n              scope.to.isOpen = !scope.to.isOpen;\n            },\n            datepickerOptions: {}\n          }\n        }\n        \n      });\n\n\n\n      /**\n       * wrappers to show validation errors\n       * without having to rewrite formly types\n       */\n      formlyConfigProvider.setWrapper([\n          {\n            template: [\n              '<div class=\"formly-template-wrapper form-group\"',\n              '     ng-class=\"{\\'has-error\\': options.validation.errorExistsAndShouldBeVisible}\">',\n              ' <formly-transclude></formly-transclude>',\n              ' <div class=\"validation\"',\n              '       ng-if=\"options.validation.errorExistsAndShouldBeVisible\"',\n              '       ng-messages=\"options.formControl.$error\">',\n              '   <div ng-messages-include=\"validation.html\"></div>',\n              '   <div ng-message=\"{{::name}}\" ng-repeat=\"(name, message) in ::options.validation.messages\">',\n              '     {{message(options.formControl.$viewValue, options.formControl.$modelValue, this)}}',\n              '   </div>',\n              ' </div>',\n              '</div>'\n            ].join(' ')\n          }\n        ]);\n\n      function camelize(string) {\n        string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n          return chr ? chr.toUpperCase() : '';\n        });\n        // Ensure 1st char is always lowercase\n        return string.replace(/^([A-Z])/, function(match, chr) {\n          return chr ? chr.toLowerCase() : '';\n        });\n      } \n\n    }\n\n\n})();\n\nangular.module(\"ngwfApp\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"edaStepWayEasyFormGeneratorTemplate.html\",\"<section id=pageWfEdit><div ng-init=\\\"\\\"><div class=container><section id=preview><div id=preview-content><div class=content-container><toaster-container toaster-options=\\\"{ \\'position-class\\': \\'toast-top-full-width\\', \\'extendedTimeout\\':500, \\'timeOut\\':500, }\\\"></toaster-container><tabset justified=true><tab active=tab.editTab.active heading=\\\"{{\\'EDIT_TAB\\' | translate}}\\\"><div class=row><div class=\\\"row stepwizardTopmargin\\\"><div class=\\\"col-lg-8 col-lg-offset-2 col-md-8 col-md-offset-2\\\"><div class=stepwizard><div class=\\\"row stepwizard-row\\\"><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[0], \\'btn-default\\': !configuration.stepIndicators[0]}\\\">0</button><p>{{\\'WIZARD_LINES\\' | translate}}</p></div><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[1], \\'btn-default\\': !configuration.stepIndicators[1], \\'disabled\\': (configuration.configStepCounter < 1)}\\\">1</button><p>{{\\'WIZARD_LAYOUT\\' | translate}}</p></div><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-default btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[2], \\'btn-default\\': !configuration.stepIndicators[2], \\'disabled\\': (configuration.configStepCounter < 2)}\\\">2</button><p>{{\\'WIZARD_CONTROLS\\' | translate}}</p></div><div class=\\\"stepwizard-step col-md-3\\\"><button type=button class=\\\"btn btn-default btn-circle\\\" ng-class=\\\"{\\'btn-primary\\': configuration.stepIndicators[3], \\'btn-default\\': !configuration.stepIndicators[3], \\'disabled\\': (configuration.configStepCounter < 3)}\\\">3</button><p>{{\\'WIZARD_SAVE\\' | translate}}</p></div></div></div></div></div></div><div class=row><ul class=pager><li ng-class=\\\"{\\'disabled\\':stepIndicators[0]}\\\"><button class=\\\"btn btn-primary customPagerButton\\\" ng-click=previousConfigStep()><i class=\\\"fa fa-arrow-left fa-2x pull-left\\\"></i> <span class=pull-right>{{\\'PAGER_PREVIOUS\\' | translate}}</span></button></li><li ng-class=\\\"{\\'disabled\\':stepIndicators[3]}\\\"><button class=\\\"btn btn-primary customPagerButton\\\" ng-click=nextConfigStep()><span class=pull-left>{{\\'PAGER_NEXT\\' | translate}}</span> <i class=\\\"fa fa-arrow-right fa-2x pull-right\\\"></i></button></li></ul><div class=animate-switch-container ng-switch=\\\"\\\" on=configuration.listConfigStep[configuration.configStepCounter]><div class=animate-switch ng-switch-when=init><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i>&nbsp;{{\\'COMMAND_PANEL\\' | translate}}</h3></div><div class=panel-body><div class=row><div class=col-md-12><span class=addNewLine>{{\\'ADD_NEW_LINE\\' | translate}} :</span>&nbsp; <button class=\\\"btn btn-primary\\\" ng-click=addNewline()><i class=\\\"fa fa-plus fa-1x\\\"></i></button></div></div></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-eye\\\"></i>&nbsp;{{\\'VISUAL_PANEL\\' | translate}}</h3></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat=\\\"line in configuration.lines track by $index\\\"><div ng-switch=\\\"\\\" on=line.columns.length><div class=\\\"row linesList\\\" ng-switch-when=1><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==0\\\" ng-click=upThisLine($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==(configuration.lines.length-1)\\\" ng-click=downThisLine($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger pull-right\\\" ng-click=removeThisLine($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-12 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=2><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==0\\\" ng-click=upThisLine($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==(configuration.lines.length-1)\\\" ng-click=downThisLine($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger pull-right\\\" ng-click=removeThisLine($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=3><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==0\\\" ng-click=upThisLine($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-hide=\\\"$index==(configuration.lines.length-1)\\\" ng-click=downThisLine($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger pull-right\\\" ng-click=removeThisLine($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[2].control.type !== \\'none\\' ? line.columns[2].control.type + \\' \\' + line.columns[2].control.subtype || \\'\\' : \\'column 3\\'}}</button></div></div></div></div></li></ul></div></div></div></div></div><div class=animate-switch ng-switch-when=first><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i>&nbsp;{{\\'COMMAND_PANEL\\' | translate}}</h3></div><div class=panel-body><div class=row><div class=col-md-12><h4 class=\\\"numberOfcolumsText text-center\\\"><i>- {{\\'SELECTED_LINE\\' | translate}} -</i></h4><h4 class=\\\"numberOfcolumsText text-center\\\">{{\\'NUMBER_OF_COLUMN\\' | translate}} :</h4></div></div><div class=row><div class=\\\"col-xs-2 col-xs-offset-3 col-sm-2 col-sm-offset-3 col-md-2 col-md-offset-3\\\"><button class=\\\"btn btn-primary pull-right btnMinusColumns\\\" ng-click=decreaseNumberOfColumns()><i class=\\\"fa fa-minus fa-1x\\\"></i></button></div><div class=\\\"col-xs-2 col-sm-2 col-md-2 text-center\\\"><span class=numberOfColumnsLabel>{{configuration.lines[configuration.activeLine -1].columns.length}}</span></div><div class=\\\"col-xs-2 col-sm-2 col-md-2\\\"><button class=\\\"btn btn-primary pull-left btnAddColumns\\\" ng-click=increaseNumberOfColumns()><i class=\\\"fa fa-plus fa-1x\\\"></i></button></div></div></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-eye\\\"></i>&nbsp;{{\\'VISUAL_PANEL\\' | translate}}</h3></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat=\\\"line in configuration.lines track by $index\\\"><div ng-switch=\\\"\\\" on=line.columns.length><div class=\\\"row linesList\\\" ng-switch-when=1><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-12 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=2><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=3><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block btn-default disabled\\\">{{line.columns[2].control.type !== \\'none\\' ? line.columns[2].control.type + \\' \\' + line.columns[2].control.subtype || \\'\\' : \\'column 3\\'}}</button></div></div></div></div></li></ul></div></div></div></div></div><div class=animate-switch ng-switch-when=second><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i>&nbsp;{{\\'COMMAND_PANEL\\' | translate}}</h3></div><div class=panel-body><div class=row><div class=col-md-12><h4 class=\\\"numberOfcolumsText text-center\\\">- {{\\'APPLY_CTRL2COL\\' | translate}} -</h4></div></div><div class=row><div class=col-lg-12><hr><blockquote><p class=numberOfcolumsText><i class=\\\"fa fa-minus\\\"></i>&nbsp; {{\\'CLIC_TAP_2_OPEN\\' | translate}}.</p><p class=numberOfcolumsText><i class=\\\"fa fa-minus\\\"></i>&nbsp; {{\\'SELECT_2_APPLY_COL\\' | translate}}.</p></blockquote></div></div></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-eye\\\"></i>&nbsp;{{\\'VISUAL_PANEL\\' | translate}}</h3></div><div class=panel-body><ul class=list-group><li class=list-group-item ng-repeat=\\\"line in configuration.lines track by $index\\\"><div ng-switch=\\\"\\\" on=line.columns.length><div class=\\\"row linesList\\\" ng-switch-when=1><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-12 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[0].control.edited, \\'btn-success\\': line.columns[0].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 0)\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=2><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[0].control.edited, \\'btn-success\\': line.columns[0].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 0)\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-6 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[1].control.edited, \\'btn-success\\': line.columns[1].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 1)\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div></div></div><div class=\\\"row linesList\\\" ng-switch-when=3><div class=\\\"col-md-12 lineCommandButtons\\\" ng-show=\\\"configuration.lines.length > 1\\\"><button class=btn ng-class=\\\"{\\'btn-warning\\':($index + 1) !== configuration.activeLine, \\'btn-success\\': ($index + 1) === configuration.activeLine}\\\" ng-click=\\\"setActiveLineNumber($index + 1)\\\"><i class=fa ng-class=\\\"{\\'fa-square-o\\': ($index + 1) !== configuration.activeLine, \\'fa-check-square-o\\': ($index + 1) === configuration.activeLine}\\\"></i></button></div><div class=col-md-12><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[0].control.edited, \\'btn-success\\': line.columns[0].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 0)\\\">{{line.columns[0].control.type !== \\'none\\' ? line.columns[0].control.type + \\' \\' + line.columns[0].control.subtype || \\'\\' : \\'column 1\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[1].control.edited, \\'btn-success\\': line.columns[1].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 1)\\\">{{line.columns[1].control.type !== \\'none\\' ? line.columns[1].control.type + \\' \\' + line.columns[1].control.subtype || \\'\\' : \\'column 2\\'}}</button></div><div class=\\\"col-md-4 well\\\"><button class=\\\"btn btn-lg btn-block\\\" ng-class=\\\"{\\'btn-primary\\': !line.columns[2].control.edited, \\'btn-success\\': line.columns[2].control.edited}\\\" ng-click=\\\"showModalAddCtrlToColumn(\\'\\', $index, 2)\\\">{{line.columns[2].control.type !== \\'none\\' ? line.columns[2].control.type + \\' \\' + line.columns[2].control.subtype || \\'\\' : \\'column 3\\'}}</button></div></div></div></div></li></ul></div></div></div></div></div><div class=animate-switch ng-switch-when=third><div class=col-md-4><div id=commandPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-keyboard-o\\\"></i>&nbsp;{{\\'COMMAND_PANEL\\' | translate}}</h3></div><div class=panel-body><div class=row><div class=col-xs-12><div class=form-group><label for=inputSubmitButtontext class=\\\"greyText control-label\\\">{{\\'CUSTOM_SUBMIT_BTN\\' | translate}} :</label><div><input type=text class=form-control id=inputSubmitButtontext ng-model=configuration.submitButtonText></div></div></div></div><hr><div class=row><div class=col-xs-12><div class=form-group><label for=inputCancelButtontext class=\\\"greyText control-label\\\">{{\\'CUSTOM_CANCEL_BTN\\' | translate}} :</label><div><input type=text class=form-control id=inputCancelButtontext ng-model=configuration.cancelButtonText></div></div></div></div><hr><div class=row><div class=col-xs-12><div class=form-group><label for=inputNameFormtext class=\\\"greyText control-label\\\">{{\\'NAME_THIS_FORM\\' | translate}} :</label><div><input type=text class=form-control id=inputNameFormtext ng-model=configuration.formName></div></div></div></div><button class=\\\"btn btn-primary btn-block btn-lg\\\" ng-click=saveThisForm()>{{\\'SAVE_THIS_FORM\\' | translate}}</button></div></div></div></div><div class=col-md-8><div id=visualPanel><div class=\\\"panel panel-default\\\"><div class=panel-heading><h3 class=panel-title><i class=\\\"fa fa-thumbs-o-up\\\"></i>&nbsp;{{\\'FINAL_STEP\\' | translate}}</h3></div><div class=panel-body><form ng-submit=vm.onSubmit()><formly-form id=saveFormlyFom model=vm.model fields=vm.wfFormFields><span class=pull-right><button class=\\\"btn btn-primary\\\" type=submit>{{configuration.submitButtonText}}</button> <button class=\\\"btn btn-primary\\\" type=cancel>{{configuration.cancelButtonText}}</button></span></formly-form></form></div></div></div></div></div></div></div></tab><tab active=tab.previewTab.active ng-if=tab.previewTab.tabVisible heading=\\\"{{\\'PREVIEW_TAB\\' | translate}}\\\"><div class=\\\"panel panel-default\\\"><div class=panel-body><form ng-submit=vm.onSubmit()><formly-form id=previewFormlyForm model=vm.model fields=vm.wfFormFields><span class=pull-right><button class=\\\"btn btn-primary\\\" type=submit>{{configuration.submitButtonText}}</button> <button class=\\\"btn btn-primary\\\" type=cancel>{{configuration.cancelButtonText}}</button></span></formly-form></form></div></div><div ng-if=tab.previewTab.modelsVisible class=\\\"panel panel-default\\\"><div class=panel-body><p>{{\\'DATA_MODEL\\' | translate}}</p><pre>\\n\t\t\t\t\t\t\t\t\t\t{{vm.model | json}}\\n\t\t\t\t\t\t\t\t\t</pre></div></div><div ng-if=tab.previewTab.modelsVisible class=\\\"panel panel-default\\\"><div class=panel-body><p>{{\\'FIELDS_MODEL\\' | translate}}</p><pre>\\n\t\t\t\t\t\t\t\t\t\t{{vm.wfFormFieldsOnlyNeededProperties | json}}\\n\t\t\t\t\t\t\t\t\t</pre></div></div></tab></tabset></div></div></section><hr></div></div></section>\");\n$templateCache.put(\"editModalTemplate.html\",\"<div class=modal-header><h3 class=\\\"modal-title greyText\\\">{{\\'SELECT_A_CTRL\\' | translate}}</h3></div><div class=modal-body><hr><div class=row><div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\"><h5 class=greyText><i class=\\\"fa fa-filter\\\"></i>&nbsp; {{\\'SELECT_CTRL_IN_LIST\\' | translate}} :</h5></div><div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\"><ol class=\\\"nya-bs-select col-xs-12 col-sm-12 col-md-12 col-lg-12\\\" ng-model=modelNyaSelect data-live-search=false><li nya-bs-option=\\\"option in nyaSelectFiltered.controls group by option.group\\\"><span class=\\\"dropdown-header greyText\\\">{{$group}}</span><a ng-click=selectThisControl(option.id)><span>{{ option.name }}</span> <span class=\\\"glyphicon glyphicon-ok check-mark\\\"></span></a></li></ol></div></div><hr><div ng-switch=\\\"\\\" on=nyaSelect.selectedControl><div ng-switch-when=none><div class=row><div class=col-sm-12><h5 class=\\\"text-center texteRouge\\\"><i class=\\\"fa fa-arrow-up\\\"></i>&nbsp; {{\\'SELECT_A_CTRL\\' | translate}}</h5></div></div></div><div ng-switch-when=empty><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-sm-12><h5 class=\\\"text-center greyText\\\">{{\\'COL_WILL_BE_BLANK\\' | translate}}</h5></div></div></div></div></div><div ng-switch-when=Header><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><div><h2 class=text-center>{{nyaSelect.temporyConfig.formlyDesciption}}</h2><hr></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'HEADER_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputHeaderTextUpdate placeholder=\\\"{{\\'ADD_EDIT_HEADER_HERE\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Subtitle><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><div><h4 class=text-center>{{nyaSelect.temporyConfig.formlyPlaceholder}}</h4><hr></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputSubTitleTextUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'SUBTITLE_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputSubTitleTextUpdate placeholder=\\\"{{\\'ADD_EDIT_SUBTIL_HERE\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=TextInput><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputText class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><input type=text class=form-control id=inputText placeholder={{nyaSelect.temporyConfig.formlyPlaceholder}}><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextplaceholderUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'PLACEHOLDER\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputTextplaceholderUpdate placeholder=\\\"{{\\'ADD_EDIT_PLACEHOLD\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Password><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputPassword class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><input type=password class=form-control id=inputPassword placeholder={{nyaSelect.temporyConfig.formlyPlaceholder}}><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextplaceholderUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'PLACEHOLDER\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputTextplaceholderUpdate placeholder=\\\"{{\\'ADD_EDIT_PLACEHOLD\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Email><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputEmail class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><input type=text class=form-control id=inputEmail placeholder={{nyaSelect.temporyConfig.formlyPlaceholder}}><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextplaceholderUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'PLACEHOLDER\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyPlaceholder id=inputTextplaceholderUpdate placeholder=\\\"{{\\'ADD_EDIT_PLACEHOLD\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Date><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=inputDate class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><div class=input-group><span class=input-group-addon><i class=\\\"glyphicon glyphicon-calendar\\\"></i></span> <input type=text class=form-control datepicker-popup={{nyaSelect.temporyConfig.datepickerPopup}} ng-model=demodt.dt is-open=demodt.opened min-date=demodt.minDate max-date=\\\"\\'2099-12-31\\'\\\" datepicker-options=dateOptions date-disabled=\\\"disabled(date, mode)\\\" close-text=Close ng-click=open($event)></div><p></p><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DATE_FORMAT\\' | translate}} :</label><div class=col-lg-9><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\\\" ng-model=nyaSelect.temporyConfig.datepickerPopup id=dateformatSelect><li class=nya-bs-option nya-bs-option=\\\"dateformat in demodt.formats\\\" value=dateformat><a>{{dateformat}}</a></li></ol></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Texarea><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=textArea class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><textarea class=form-control ng-model=model[options.key] rows=3 id=textArea></textarea><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=RichTextEditor><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=RichTextEditor class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><text-angular ng-model=model[options.key]></text-angular><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Radio><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=basicSelect class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><div class=radio ng-repeat=\\\"radioRow in radioRowCollection.rows\\\"><label><input type=radio name=optionsRadios id=\\\"{{\\'optionsRadio-\\' + $index}}\\\" value=$index checked=\\\"\\\"> {{radioRow.option}}</label></div><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=radioRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'ADD_NEW_RADIO\\' | translate}} :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input type=text class=form-control id=inputAddNewRadioOption placeholder=\\\"{{\\'ADD_RADIO_PLACEHOLD\\' | translate}}\\\" ng-model=newOptionRadio.saisie></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewOptionRadio()>{{\\'ADD\\' | translate}}</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=radioRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'EDIT_REMOVE_RADIO\\' | translate}} :</label></div></div><div class=row><div class=form-group><div class-\\\"col-lg-12=\\\"\\\" col-md-12=\\\"\\\" col-sm-12=\\\"\\\" col-xs-12\\\"=\\\"\\\"><div class=container><div ng-show=\\\"radioRowCollection.rows.length === 0\\\"><h5 class=\\\"text-center greyText\\\"><em>- {{\\'NO_RADIO_ADD_NEW\\' | translate}} -</em></h5></div><table ng-if=\\\"radioRowCollection.rows.length > 0\\\" class=\\\"table table-striped\\\"><thead><tr><th st-ratio=20>{{\\'ORDER\\' | translate}}</th><th st-ratio=55>{{\\'OPTION\\' | translate}}</th><th st-ratio=25></th></tr><tr><th st-ratio=20></th><th st-ratio=55><input ng-model=radioFilter placeholder=\\\"{{\\'SEARCH_4_OPTION\\' | translate}}\\\" class=\\\"input-sm form-control\\\" type=search></th><th st-ratio=25></th></tr></thead><tbody><tr ng-repeat=\\\"radioRow in radioRowCollection.rows | filter:radioFilter as radioRow\\\"><td st-ratio=20>{{$index}}</td><td st-ratio=55>{{radioRow.option}}</td><td st-ratio=25><div class=pull-right><button class=\\\"btn btn-primary\\\" ng-click=upThisRadioRow($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-primary\\\" ng-click=downThisRadioRow($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger\\\" ng-click=removeRadioRow($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div></td></tr></tbody></table></div></div></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=Checkbox><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><div class=col-md-12><div class=checkbox><label><input type=checkbox id=checkBox> <span class=blackText>{{nyaSelect.temporyConfig.formlyLabel}}</span><span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label></div><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=form-group><label for=inputTextLabelUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'LABEL_TEXT\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyLabel id=inputTextLabelUpdate placeholder=\\\"{{\\'ADD_EDIT_LABEL_HERE\\' | translate}}\\\"></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextRequiredUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'REQUIRED\\' | translate}} :</label><div class=col-lg-9><div class=checkboxCssCorrection>&nbsp;</div><input type=checkbox ng-model=nyaSelect.temporyConfig.formlyRequired id=inputTextRequiredUpdate></div></div></div><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=BasicSelect><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=basicSelect class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\\\" ng-model=modelbasicSelect id=basicSelect disabled=\\\"basicSelectRowCollection.rows.length === 0\\\"><li class=nya-bs-option nya-bs-option=\\\"basicSelectRow in basicSelectRowCollection.rows\\\" value=$index><a>{{basicSelectRow.option}}</a></li></ol><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=basicSelectRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'ADD_NEW_OPTIONS\\' | translate}} :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input type=text class=form-control id=inputAddNewBasicOption placeholder=\\\"{{\\'ADD_A_NEW_OPTION\\' | translate}}\\\" ng-model=newOptionBasicSelect.saisie></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewOptionBasicSelect()>{{\\'ADD\\' | translate}}</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'EDIT_REMOVE_OPTIONS\\' | translate}} :</label></div></div><div class=row><div class=form-group><div class-\\\"col-lg-12=\\\"\\\" col-md-12=\\\"\\\" col-sm-12=\\\"\\\" col-xs-12\\\"=\\\"\\\"><div class=container><div ng-if=\\\"basicSelectRowCollection.rows.length === 0\\\"><h5 class=\\\"text-center greyText\\\"><em>- {{\\'NO_OPTION_ADD_NEW\\' | translate}} -</em></h5></div><table ng-if=\\\"basicSelectRowCollection.rows.length > 0\\\" class=\\\"table table-striped\\\"><thead><tr><th st-ratio=20>{{\\'ORDER\\' | translate}}</th><th st-ratio=55>{{\\'OPTION\\' | translate}}</th><th st-ratio=25></th></tr><tr><th st-ratio=20></th><th st-ratio=55><input ng-model=basicSelectFilter placeholder=\\\"{{\\'SEARCH_4_OPTION\\' | translate}}\\\" class=\\\"input-sm form-control\\\" type=search></th><th st-ratio=25></th></tr></thead><tbody><tr ng-repeat=\\\"basicSelectRow in basicSelectRowCollection.rows | filter:basicSelectFilter as basicSelectRow\\\"><td st-ratio=20>{{$index}}</td><td st-ratio=55>{{basicSelectRow.option}}</td><td st-ratio=25><div class=pull-right><button class=\\\"btn btn-primary\\\" ng-click=upThisRow($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-primary\\\" ng-click=downThisRow($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-danger\\\" ng-click=removeRow($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div></td></tr></tbody></table></div></div></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div><div ng-switch-when=GroupedSelect><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-eye\\\"></i>&nbsp; {{\\'PREVIEW_TAB\\' | translate}} :</h5></div></div><hr><div class=row><div class=col-md-12><div class=form-group><label for=select class=\\\"control-label textControlLabel\\\">{{nyaSelect.temporyConfig.formlyLabel}}<span ng-if=nyaSelect.temporyConfig.formlyRequired class=textControlLabel>*</span></label><div><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12\\\" ng-model=modelGroupedSelect data-live-search=true disabled=\\\"groupedSelectRowCollection.rows.length === 0\\\"><li nya-bs-option=\\\"groupedSelectRow in groupedSelectRowCollection.rows group by groupedSelectRow.group\\\" value=$index><span class=dropdown-header>{{groupedSelectRow.group}}</span> <a><span>{{groupedSelectRow.option}}</span> <span class=\\\"glyphicon glyphicon-ok check-mark\\\"></span></a></li></ol><p class=help-block>{{nyaSelect.temporyConfig.formlyDesciption}}</p></div></div></div></div></div></div><div class=\\\"panel panel-default\\\"><div class=panel-body><div class=row><div class=col-md-12><h5 class=greyText><i class=\\\"fa fa-pencil-square-o\\\"></i>&nbsp; {{\\'EDIT_PROPERTIES\\' | translate}} :</h5></div></div><hr><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=groupedSelectRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'ADD_NEW_OPTIONS\\' | translate}} :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input type=text class=form-control id=inputAddNewGroupedOption placeholder=\\\"{{\\'ADD_A_NEW_OPTION\\' | translate}}\\\" ng-model=newOptionGroupedSelect.saisie></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewOptionGroupedSelect()>{{\\'ADD\\' | translate}}</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label for=groupedSelectRowCollection class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'ADD_NEW_GROUPS\\' | translate}} :</label></div></div><div class=row><div><div class=form-group><div class=\\\"col-sm-9 col-xs-9 col-md-9 col-lg-9\\\"><input id=inputAddNewGroupGroupedOption type=text class=form-control ng-model=newGroupGroupedSelect.saisie placeholder=\\\"{{\\'ADD_A_NEW_GROUP\\' | translate}}\\\"></div><div class=\\\"col-sm-3 col-xs-3 col-md-3 col-lg-3\\\"><button class=\\\"btn btn-primary\\\" ng-click=addNewGroupToGroupedSelect()>{{\\'ADD\\' | translate}}</button></div></div></div></div><div class=row><div class=\\\"col-lg-3 col-md-3\\\"><label class=\\\"control-label greyText editPropertiesLabel\\\">{{\\'EDIT_GROUPS_OPTIONS\\' | translate}} :</label></div></div><div class=row><div class=form-group><div class-\\\"col-lg-12=\\\"\\\" col-md-12=\\\"\\\" col-sm-12=\\\"\\\" col-xs-12\\\"=\\\"\\\"><div class=container><div ng-if=\\\"groupedSelectRowCollection.rows.length === 0\\\"><h5 class=\\\"text-center greyText\\\"><em>- {{\\'NO_OPTION_ADD_NEW\\' | translate}} -</em></h5></div><table ng-if=\\\"groupedSelectRowCollection.rows.length > 0\\\" class=\\\"table table-striped\\\"><thead><tr><th st-ratio=20>{{\\'ORDER\\' | translate}}</th><th st-ratio=25>{{\\'GROUP\\' | translate}}</th><th st-ratio=30>{{\\'OPTION\\' | translate}}</th><th st-ratio=25></th></tr><tr><th st-ratio=20></th><th st-ratio=25></th><th st-ratio=30><input ng-model=groupedSelectFilter placeholder=\\\"{{\\'SEARCH_4_OPTION\\' | translate}}\\\" class=\\\"input-sm form-control\\\" type=search></th><th st-ratio=25></th></tr></thead><tbody><tr ng-repeat=\\\"groupedSelectRow in groupedSelectRowCollection.rows | filter:groupedSelectFilter as oneGroupedSelectRow\\\"><td st-ratio=20>{{$index}}</td><td st-ratio=25><div ng-if=\\\"groupSelectGroupClick.showList === true\\\"><div ng-if=\\\"GroupedSelectGroups.list.length === 0\\\"><p class=\\\"text-left noGroupText\\\">- {{\\'NO_GROUP_ADD_NEW\\' | translate}} -</p></div><div ng-if=\\\"GroupedSelectGroups.list.length > 0\\\"><ol class=\\\"nya-bs-select col-sm-12 col-xs-12 col-md-12 col-lg12 editGroupedSelectnyaSelect\\\" ng-model=oneGroupedSelectRow.group id=modelGroupedOptionGroupedChoose disabled=\\\"GroupedSelectGroups.list.length === 0\\\"><li class=nya-bs-option nya-bs-option=\\\"GroupedSelectGroup in GroupedSelectGroups.list\\\" value=GroupedSelectGroup><a>{{GroupedSelectGroup}}</a></li></ol></div></div><div ng-if=\\\"groupSelectGroupClick.showList === false\\\">{{oneGroupedSelectRow.group}}</div></td><td st-ratio=30>{{oneGroupedSelectRow.option}}</td><td st-ratio=25><div class=pull-right><button class=\\\"btn btn-primary\\\" ng-click=upThisGroupedSelectRow($index)><i class=\\\"fa fa-arrow-up\\\"></i></button> <button class=\\\"btn btn-primary\\\" ng-click=downThisGroupedSelectRow($index)><i class=\\\"fa fa-arrow-down\\\"></i></button> <button class=\\\"btn btn-warning\\\" ng-click=showGroupListToChoose()><i class=\\\"fa fa-pencil-square-o\\\"></i></button> <button class=\\\"btn btn-danger\\\" ng-click=removeGroupedSelectRow($index)><i class=\\\"fa fa-trash-o\\\"></i></button></div></td></tr></tbody></table></div></div></div></div><hr><div class=marginTopFivepixels></div><div class=row><div class=form-group><label for=inputTextDescriptionUpdate class=\\\"col-lg-3 control-label greyText editPropertiesLabel\\\">{{\\'DESCRIPTION\\' | translate}} :</label><div class=col-lg-9><input type=text class=form-control ng-model=nyaSelect.temporyConfig.formlyDesciption id=inputTextDescriptionUpdate placeholder=\\\"{{\\'ADDEDIT_DESCRIPTION\\' | translate}}\\\"></div></div></div></div></div></div></div></div><div class=modal-footer><button class=\\\"btn btn-primary\\\" ng-class=\\\"{\\'disabled\\': nyaSelect.selectedControl === \\'none\\'}\\\" ng-click=ok()>{{\\'OK\\' | translate}}</button> <button class=\\\"btn btn-warning\\\" ng-click=cancel()>{{\\'CANCEL\\' | translate}}</button></div>\");}]);\n/**\n *  ------------------------------------------------------\n *  module core : injects core \"non app modules\"\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.core', [\n\t    'textAngular',\n\t    'textAngularSetup',\n\t    'ngAnimate',\n\t    'toaster',                      \n\t    'formly', \n\t    'formlyBootstrap',\n\t    'ui.bootstrap',\n\t    'nya.bootstrap.select',\n\t\t\t'pascalprecht.translate'\n\t\t]);\n\n})(); \n\nangular.module(\"eda.easyFormGenerator.translate\", []).config([\"$translateProvider\", function($translateProvider) {\n$translateProvider.translations(\"de\", {\n    \"SAY_HI\"\t            : \"Hallo\",\n    \n    \"EDIT_TAB\"\t\t        : \"Bearbeiten / Schaffen\",\n    \"PREVIEW_TAB\"         : \"Vorschau\",\n    \n    \"WIZARD_LINES\"        : \"Linien\",\n    \"WIZARD_LAYOUT\"       : \"Layout\",\n    \"WIZARD_CONTROLS\"     : \"Steuerung\",\n    \"WIZARD_SAVE\"         : \"sparen\",    \n   \n    \"PAGER_PREVIOUS\"      : \"vorher.\",\n    \"PAGER_NEXT\"          : \"nächste\",\n    \n    \"COMMAND_PANEL\"       : \"Anweisung\",\n    \"VISUAL_PANEL\"        : \"visuell\",   \n    \n    \"ADD_NEW_LINE\"        : \"Hinzufügen neuer Leitung\",\n    \"SELECTED_LINE\"       : \"ausgewählte Linie\",\n    \n    \"NUMBER_OF_COLUMN\"    : \"Anzahl von Spalten\",\n    \"APPLY_CTRL2COL\"      : \"gelten diese Steuer Spalte\",\n    \n    \"CLIC_TAP_2_OPEN\"     : \"klicken Sie auf Spalte zur Steuerungsauswahl öffnen\",\n    \"SELECT_2_APPLY_COL\"  : \"Wählen Sie die gewünschte Steuerung und gültig , um es in Spalte anwenden\",\n    \n    \"CUSTOM_SUBMIT_BTN\"   : \"Passen Submit-Button Text\",\n    \"CUSTOM_CANCEL_BTN\"   : \"Passen Cancel-Button Text\",\n    \"NAME_THIS_FORM\"      : \"Nennen dieses Formular\",\n    \"SAVE_THIS_FORM\"      : \"Speichern dieses Formular\",\n    \n    \"FINAL_STEP\"          : \"Endschritt : Formular Vorschau\",\n    \n    \"DATA_MODEL\"          : \"DATEN MODELL\", \n    \"FIELDS_MODEL\"        : \"FELDER MODELL (Datenbank-kompatibel)\", \n    \n    \"SELECT_A_CTRL\"       : \"Wählen Sie ein Steuer\",\n    \"SELECT_CTRL_IN_LIST\" : \"Wählen Sie ein Steuer aus der Liste unten\",\n    \"COL_WILL_BE_BLANK\"   : \"die Spalte werde leer sein\",  \n    \n    \"EDIT_PROPERTIES\"     : \"Anzeigen\",\n    \n    \"HEADER_TEXT\"         : \"Kopftext\",\n    \"ADD_EDIT_HEADER_HERE\": \"Kopftext ändern\", \n    \n    \"SUBTITLE_TEXT\"       : \"Untertitel\",\n    \"ADD_EDIT_SUBTIL_HERE\": \"Untertitel ändern\",\n    \n    \"LABEL_TEXT\"          : \"Etikett\",\n    \"ADD_EDIT_LABEL_HERE\" : \"Etikett ändern\",    \n    \n    \"PLACEHOLDER\"         : \"placeholder\",\n    \"ADD_EDIT_PLACEHOLD\"  : \"placeholder ändern\",\n    \n    \"REQUIRED\"            : \"erforderlich\",\n    \n    \"DESCRIPTION\"         : \"Beschreibung\",\n    \"ADDEDIT_DESCRIPTION\" : \"Beschreibung ändern\", \n    \n    \"DATE_FORMAT\"         : \"Datumsformat\", \n    \n    \"ADD_NEW_RADIO\"       : \"Radiobutton hinzufügen\", \n    \"ADD_RADIO_PLACEHOLD\" : \"Radiobutton hinzufügen\",\n    \"EDIT_REMOVE_RADIO\"   : \"Radiobutton ändern\",\n    \"NO_RADIO_ADD_NEW\"    : \"kein Radiobutton : Radiobutton hinzufügen\", \n    \n    \"SEARCH_4_OPTION\"     : \"option suchen\",   \n    \n    \"ADD\"                 : \"hinzufügen\",\n    \"ORDER\"               : \"bestellen\",\n    \"OPTION\"              : \"Option\",\n    \"GROUP\"               : \"Gruppe\",    \n    \n    \"ADD_NEW_OPTIONS\"     : \"Optionen hinzufügen\",\n    \"ADD_A_NEW_OPTION\"    : \"Option hinzufügen\",\n    \"EDIT_REMOVE_OPTIONS\" : \"Optionen ändern\",\n    \"NO_OPTION_ADD_NEW\"   : \"kein option : Option hinzufügen\",              \n         \n         \n    \"ADD_NEW_GROUPS\"      : \"Gruppen hinzufügen\",\n    \"ADD_A_NEW_GROUP\"     : \"Gruppe hinzufügen\",\n    \"EDIT_GROUPS_OPTIONS\" : \"Gruppen ändern\",\n    \"NO_GROUP_ADD_NEW\"    : \"keine Gruppe : Gruppe hinzufügen\",  \n    \n    \"OK\"                  : \"bestätigen\",\n    \"CANCEL\"              : \"stornieren\"    \n           \n});\n\n$translateProvider.translations(\"en\", {\n    \"SAY_HI\"\t           : \"Hello\",\n    \n    \"EDIT_TAB\"            : \"Edit / Create\",\n    \"PREVIEW_TAB\"         : \"Preview\",\n    \n    \"WIZARD_LINES\"        : \"lines\",\n    \"WIZARD_LAYOUT\"       : \"layout\",\n    \"WIZARD_CONTROLS\"     : \"controls\",\n    \"WIZARD_SAVE\"         : \"save\",\n    \n    \"PAGER_PREVIOUS\"      : \"Previous\",\n    \"PAGER_NEXT\"          : \"Next\",\n    \n    \"COMMAND_PANEL\"       : \"Command\",\n    \"VISUAL_PANEL\"        : \"Visual\",\n    \n    \"ADD_NEW_LINE\"        : \"Add a new line\",\n    \n    \"SELECTED_LINE\"       : \"Selected line\",\n    \n    \"NUMBER_OF_COLUMN\"    : \"number of columns\",\n    \"APPLY_CTRL2COL\"      : \"Apply controls to columns\",\n    \n    \"CLIC_TAP_2_OPEN\"     : \"Click / Tap on column to open control selection\",\n    \"SELECT_2_APPLY_COL\"  : \"Select desired control and valid to apply it to column\",\n    \n    \"CUSTOM_SUBMIT_BTN\"   : \"Customize Submit button Text\",\n    \"CUSTOM_CANCEL_BTN\"   : \"Customize Cancel button Text\",\n    \"NAME_THIS_FORM\"      : \"Name this form\",\n    \"SAVE_THIS_FORM\"      : \"save this form\",\n    \n    \"FINAL_STEP\"          : \"Final Step : form preview\",\n    \n    \"DATA_MODEL\"          : \"DATA MODEL\",\n    \"FIELDS_MODEL\"        : \"FIELDS MODEL (ready to save to database one)\",\n    \n    \n    \"SELECT_A_CTRL\"       : \"Select a control\",\n    \"SELECT_CTRL_IN_LIST\" : \"Select a control in the list below\",\n    \"COL_WILL_BE_BLANK\"   : \"Column will be blank\",\n    \n    \"EDIT_PROPERTIES\"     : \"Edit properties\",\n    \n    \"HEADER_TEXT\"         : \"Header text\",\n    \"ADD_EDIT_HEADER_HERE\": \"Add / edit header text here\",\n    \n    \"SUBTITLE_TEXT\"       : \"Subtitle text\",\n    \"ADD_EDIT_SUBTIL_HERE\": \"Add / edit subtitle text here\",\n    \n    \"LABEL_TEXT\"          : \"Label text\",\n    \"ADD_EDIT_LABEL_HERE\" : \"Add / edit control label here\",\n    \n    \"PLACEHOLDER\"         : \"placeholder\",\n    \"ADD_EDIT_PLACEHOLD\"  : \"Add / edit placeholder text here\",\n    \n    \"REQUIRED\"            : \"Required\",\n    \n    \"DESCRIPTION\"         : \"Description\",\n    \"ADDEDIT_DESCRIPTION\" : \"Add / edit description here\",\n    \n    \"DATE_FORMAT\"         : \"Date format\",\n    \n    \"ADD_NEW_RADIO\"       : \"Add new radio\",\n    \"ADD_RADIO_PLACEHOLD\" : \"add new radio\",\n    \"EDIT_REMOVE_RADIO\"   : \"Edit/Remove radio\",\n    \"NO_RADIO_ADD_NEW\"    : \"no radio : add new radio values\",\n    \n    \"SEARCH_4_OPTION\"     : \"search for option\",\n    \n    \"ADD\"                 : \"add\",\n    \"ORDER\"               : \"order\",\n    \"OPTION\"              : \"option\",\n    \"GROUP\"               : \"group\",\n    \n    \"ADD_NEW_OPTIONS\"     : \"Add new options\",\n    \"ADD_A_NEW_OPTION\"    : \"add new option\",\n    \"EDIT_REMOVE_OPTIONS\" : \"Edit/Remove options\",\n    \"NO_OPTION_ADD_NEW\"   : \"no option : add new options\",\n    \n    \"ADD_NEW_GROUPS\"      : \"Add new groups\",\n    \"ADD_A_NEW_GROUP\"     : \"Add new group\",\n    \"EDIT_GROUPS_OPTIONS\" : \"Edit/Remove options/groups\",\n    \"NO_GROUP_ADD_NEW\"    : \"add new groups\",\n    \n    \"OK\"                  : \"OK\",\n    \"CANCEL\"              : \"Cancel\"\n});\n\n$translateProvider.translations(\"es\", {\n    \"SAY_HI\"\t           : \"Hola\",\n    \n    \"EDIT_TAB\"            : \"Editar / Crear\",\n    \"PREVIEW_TAB\"         : \"Previsualizar\",\n    \n    \"WIZARD_LINES\"        : \"lineas\",\n    \"WIZARD_LAYOUT\"       : \"diseño\",\n    \"WIZARD_CONTROLS\"     : \"controles\",\n    \"WIZARD_SAVE\"         : \"guardar\",\n    \n    \"PAGER_PREVIOUS\"      : \"Anterior\",\n    \"PAGER_NEXT\"          : \"Siguiente\",\n    \n    \"COMMAND_PANEL\"       : \"Comando\",\n    \"VISUAL_PANEL\"        : \"Visual\",\n    \n    \"ADD_NEW_LINE\"        : \"Agregar nueva linea\",\n    \n    \"SELECTED_LINE\"       : \"Linea seleccionada\",\n    \n    \"NUMBER_OF_COLUMN\"    : \"numero de columnas\",\n    \"APPLY_CTRL2COL\"      : \"Aplicar controles a columnas\",\n    \n    \"CLIC_TAP_2_OPEN\"     : \"Click / Toque en la columna para seleccionar controles\",\n    \"SELECT_2_APPLY_COL\"  : \"Selecciona el control deseado para aplicarlo a la columna\",\n    \n    \"CUSTOM_SUBMIT_BTN\"   : \"Personalizar texto de boton Enviar\",\n    \"CUSTOM_CANCEL_BTN\"   : \"Personalizar texto de boton Cancelar\",\n    \"NAME_THIS_FORM\"      : \"Nombrar formulario\",\n    \"SAVE_THIS_FORM\"      : \"guardar formulario\",\n    \n    \"FINAL_STEP\"          : \"Ultimo paso : previsualizar formulario\",\n    \n    \"DATA_MODEL\"          : \"MODELO DE DATOS\",\n    \"FIELDS_MODEL\"        : \"MODELO DE CAMPOS (listo para guardar en base de datos uno)\",\n    \n    \n    \"SELECT_A_CTRL\"       : \"Selecciona un control\",\n    \"SELECT_CTRL_IN_LIST\" : \"Selecciona un control de la lista\",\n    \"COL_WILL_BE_BLANK\"   : \"Columna sera vacia\",\n    \n    \"EDIT_PROPERTIES\"     : \"Editar propiedades\",\n    \n    \"HEADER_TEXT\"         : \"Texto de encabezado\",\n    \"ADD_EDIT_HEADER_HERE\": \"Agregar / editar texto de encabezado aqui\",\n    \n    \"SUBTITLE_TEXT\"       : \"Texto de subtitulo\",\n    \"ADD_EDIT_SUBTIL_HERE\": \"Agregar / editar texto de subtitulo aqui\",\n    \n    \"LABEL_TEXT\"          : \"Texto de etiqueta\",\n    \"ADD_EDIT_LABEL_HERE\" : \"Agregar / editar texto de etiqueta aqui\",\n    \n    \"PLACEHOLDER\"         : \"Marcador\",\n    \"ADD_EDIT_PLACEHOLD\"  : \"Agregar / editar texto de marcador aqui\",\n    \n    \"REQUIRED\"            : \"Requerido\",\n    \n    \"DESCRIPTION\"         : \"Descripcion\",\n    \"ADDEDIT_DESCRIPTION\" : \"Agregar / editar descripcion aqui\",\n    \n    \"DATE_FORMAT\"         : \"Formato de fecha\",\n    \n    \"ADD_NEW_RADIO\"       : \"Agregar nuevo radio\",\n    \"ADD_RADIO_PLACEHOLD\" : \"agregar nuevo radio\",\n    \"EDIT_REMOVE_RADIO\"   : \"Editar/Eliminar radio\",\n    \"NO_RADIO_ADD_NEW\"    : \"sin radio : agregar nuevos valores de radio\",\n    \n    \"SEARCH_4_OPTION\"     : \"buscar opcion\",\n    \n    \"ADD\"                 : \"agregar\",\n    \"ORDER\"               : \"orden\",\n    \"OPTION\"              : \"opcion\",\n    \"GROUP\"               : \"grupo\",\n    \n    \"ADD_NEW_OPTIONS\"     : \"agregar nuevas opciones\",\n    \"ADD_A_NEW_OPTION\"    : \"agregar nueva opcione\",\n    \"EDIT_REMOVE_OPTIONS\" : \"Editar/Eliminar opciones\",\n    \"NO_OPTION_ADD_NEW\"   : \"sin opcion : agregar nuevas opciones\",\n    \n    \"ADD_NEW_GROUPS\"      : \"Agregar nuevos grupos\",\n    \"ADD_A_NEW_GROUP\"     : \"Agregar nuevo grupo\",\n    \"EDIT_GROUPS_OPTIONS\" : \"Editar/Eliminar opciones/grupos\",\n    \"NO_GROUP_ADD_NEW\"    : \"agregar nuevos grupos\",\n    \n    \"OK\"                  : \"OK\",\n    \"CANCEL\"              : \"Cancelar\"\n});\n\n$translateProvider.translations(\"fr\", {\n    \"SAY_HI\"\t           : \"Bonjour\",\n    \n    \"EDIT_TAB\"            : \"Edition / Creation\",\n    \"PREVIEW_TAB\"         : \"Aperçu\",\n    \n    \"WIZARD_LINES\"        : \"lignes\",\n    \"WIZARD_LAYOUT\"       : \"disposition\",\n    \"WIZARD_CONTROLS\"     : \"contrôles\",\n    \"WIZARD_SAVE\"         : \"sauvegarder\",\n    \n    \"PAGER_PREVIOUS\"      : \"Précédent\",\n    \"PAGER_NEXT\"          : \"Suivant\",\n    \n    \"COMMAND_PANEL\"       : \"Commandes\",\n    \"VISUAL_PANEL\"        : \"Visuel\",\n    \n    \"ADD_NEW_LINE\"        : \"Ajouter une nouvelle ligne\",\n    \n    \"SELECTED_LINE\"       : \"Ligne sélectionnée\",\n    \n    \"NUMBER_OF_COLUMN\"    : \"nombre de colonnes\",\n    \"APPLY_CTRL2COL\"      : \"Appliquer les contrôles aux colonnes\",\n    \n    \"CLIC_TAP_2_OPEN\"     : \"Cliquer sur une colonne pour ouvrir le menu d'édition\",\n    \"SELECT_2_APPLY_COL\"  : \"Sélectionner un contrôle puis valider pour l'appliquer à la colonne\",\n    \n    \"CUSTOM_SUBMIT_BTN\"   : \"Personnaliser le texte du bouton envoie\",\n    \"CUSTOM_CANCEL_BTN\"   : \"Personnaliser le texte du bouton annuler\",\n    \"NAME_THIS_FORM\"      : \"Nommer le formulaire\",\n    \"SAVE_THIS_FORM\"      : \"sauvegarder le formulaire\",\n    \n    \"FINAL_STEP\"          : \"Dernière étape : aperçu du formulaire\",\n    \n    \"DATA_MODEL\"          : \"MODELE DE DONNEES\",\n    \"FIELDS_MODEL\"        : \"MODELE DES CHAMPS (modèle compatible base de données)\",\n\n  \n    \"SELECT_A_CTRL\"       : \"Sélectionner un contrôle\",\n    \"SELECT_CTRL_IN_LIST\" : \"Sélectionner un contrôle dans la liste ci-dessous\",\n    \"COL_WILL_BE_BLANK\"   : \"La colonne sera vide\",\n    \n    \"EDIT_PROPERTIES\"     : \"Editer les propriétés\",\n    \n    \"HEADER_TEXT\"         : \"Texte du titre principal\",\n    \"ADD_EDIT_HEADER_HERE\": \"Editer le textes du titre principal\",\n    \n    \"SUBTITLE_TEXT\"       : \"Texte du sous-titre\",\n    \"ADD_EDIT_SUBTIL_HERE\": \"Editer le textes du sous-titre\",\n    \n    \"LABEL_TEXT\"          : \"Texte de l'étiquette\",\n    \"ADD_EDIT_LABEL_HERE\" : \"Editer le texte de l'étiquette\",\n    \n    \"PLACEHOLDER\"         : \"placeholder\",\n    \"ADD_EDIT_PLACEHOLD\"  : \"Editer le placeholder\",\n    \n    \"REQUIRED\"            : \"Requis\",\n    \n    \"DESCRIPTION\"         : \"Description\",\n    \"ADDEDIT_DESCRIPTION\" : \"Ajouter / editer la description\",\n    \n    \"DATE_FORMAT\"         : \"Format de la date\",\n    \n    \"ADD_NEW_RADIO\"       : \"Ajouter un nouveau choix à cocher\",\n    \"ADD_RADIO_PLACEHOLD\" : \"Ajouter un nouveau choix à cocher\",\n    \"EDIT_REMOVE_RADIO\"   : \"Editer / supprimer un choix à cocher\",\n    \"NO_RADIO_ADD_NEW\"    : \"aucun choix à cocher : en ajouter un\",\n    \n    \"SEARCH_4_OPTION\"     : \"rechercher une option\",\n    \n    \"ADD\"                 : \"ajouter\",\n    \"ORDER\"               : \"ordre\",\n    \"OPTION\"              : \"option\",\n    \"GROUP\"               : \"groupe\",\n    \n    \"ADD_NEW_OPTIONS\"     : \"Ajouter de nouvelles options\",\n    \"ADD_A_NEW_OPTION\"    : \"ajoutre une option\",\n    \"EDIT_REMOVE_OPTIONS\" : \"Editer / supprimer des options\",\n    \"NO_OPTION_ADD_NEW\"   : \"aucune option : en ajouter\",\n    \n    \"ADD_NEW_GROUPS\"      : \"Ajouter de nouveaux groupes\",\n    \"ADD_A_NEW_GROUP\"     : \"Ajouter un nouveau groupe\",\n    \"EDIT_GROUPS_OPTIONS\" : \"Editer / supprimer les groupes et options\",\n    \"NO_GROUP_ADD_NEW\"    : \"ajouter de nouveaux groupes\",\n    \n    \"OK\"                : \"Valider\",\n    \"CANCEL\"            : \"Annuler\"        \n});\n\n$translateProvider.translations(\"jp\", {\n    \"SAY_HI\"\t           : \"こんにちわ\",\n    \n    \"EDIT_TAB\"            : \"編集 / 作成\",\n    \"PREVIEW_TAB\"         : \"プレビュー\",\n    \n    \"WIZARD_LINES\"        : \"ライン\",\n    \"WIZARD_LAYOUT\"       : \"レイアウト\",\n    \"WIZARD_CONTROLS\"     : \"コントロール\",\n    \"WIZARD_SAVE\"         : \"サーブ\",\n    \n    \"PAGER_PREVIOUS\"      : \"前\",\n    \"PAGER_NEXT\"          : \"次\",\n    \n    \"COMMAND_PANEL\"       : \"コマンド\",\n    \"VISUAL_PANEL\"        : \"ビジュアル\",\n    \n    \"ADD_NEW_LINE\"        : \"新しいライン追加\",\n    \n    \"SELECTED_LINE\"       : \"選択されたライン\",\n    \n    \"NUMBER_OF_COLUMN\"    : \"カラムの数\",\n    \"APPLY_CTRL2COL\"      : \"カラムにコントロール適用\",\n    \n    \"CLIC_TAP_2_OPEN\"     : \"コントロール選択を広げるには列をクリック\",\n    \"SELECT_2_APPLY_COL\"  : \"好きなコントロールを選び適用\",\n    \n    \"CUSTOM_SUBMIT_BTN\"   : \"適用ボタンの文字変更する場合\",\n    \"CUSTOM_CANCEL_BTN\"   : \"キャンセルボタンの文字変更する場合\",\n    \"NAME_THIS_FORM\"      : \"形式に名前を付ける\",\n    \"SAVE_THIS_FORM\"      : \"形式をサーブ\",\n    \n    \"FINAL_STEP\"          : \"ファイナルステップ : プレビュー形式\",\n    \n    \"DATA_MODEL\"          : \"データーモデル\",\n    \"FIELDS_MODEL\"        : \"モデルフィールド\",\n    \n    \n    \"SELECT_A_CTRL\"       : \"コントロールを選び選択\",\n    \"SELECT_CTRL_IN_LIST\" : \"以下のリストからコントロールを選び選択\",\n    \"COL_WILL_BE_BLANK\"   : \"空になる列\",\n    \n    \"EDIT_PROPERTIES\"     : \"プロパティの変更\",\n    \n    \"HEADER_TEXT\"         : \"ヘッダーテキスト\",\n    \"ADD_EDIT_HEADER_HERE\": \"ヘッダーテキスト文字変更\",\n    \n    \"SUBTITLE_TEXT\"       : \"サブタイトル　テキスト\",\n    \"ADD_EDIT_SUBTIL_HERE\": \"サブタイトルテキスト文字変更\",\n    \n    \"LABEL_TEXT\"          : \"ラベルテキスト\",\n    \"ADD_EDIT_LABEL_HERE\" : \"ラベルテキスト文字変更\",\n    \n    \"PLACEHOLDER\"         : \"プレースホルダー\",\n    \"ADD_EDIT_PLACEHOLD\"  : \"プレースホルダー文字変更\",\n    \n    \"REQUIRED\"            : \"必須\",\n    \n    \"DESCRIPTION\"         : \"説明\",\n    \"ADDEDIT_DESCRIPTION\" : \"説明の変更\",\n    \n    \"DATE_FORMAT\"         : \"日付の形式\",\n    \n    \"ADD_NEW_RADIO\"       : \"新ラジオボタンを追加\",\n    \"ADD_RADIO_PLACEHOLD\" : \"新ラジオボタンを追加\",\n    \"EDIT_REMOVE_RADIO\"   : \"ラジオボタン変更\",\n    \"NO_RADIO_ADD_NEW\"    : \"ラジオ無し : 新ラジオボタン追加\",\n    \n    \"SEARCH_4_OPTION\"     : \"オプション検索\",\n    \n    \"ADD\"                 : \"追加\",\n    \"ORDER\"               : \"順番\",\n    \"OPTION\"              : \"オプション\",\n    \"GROUP\"               : \"グループ\",\n    \n    \"ADD_NEW_OPTIONS\"     : \"新しいオプション追加\",\n    \"ADD_A_NEW_OPTION\"    : \"新しいオプション追加\",\n    \"EDIT_REMOVE_OPTIONS\" : \"オプションの変更\",\n    \"NO_OPTION_ADD_NEW\"   : \"オプション無し : 新しいオプション追加\",\n    \n    \"ADD_NEW_GROUPS\"      : \"新しいグループ追加\",\n    \"ADD_A_NEW_GROUP\"     : \"新しいグループ追加\",\n    \"EDIT_GROUPS_OPTIONS\" : \"グループを変更\",\n    \"NO_GROUP_ADD_NEW\"    : \"グループを追加\",\n    \n    \"OK\"                : \"オッケー\",\n    \"CANCEL\"            : \"キャンセル\"\n});\n\n$translateProvider.translations(\"tr\", {\n    \"SAY_HI\"\t           : \"Merhaba\",\n    \n    \"EDIT_TAB\"            : \"Düzenle / Oluştur\",\n    \"PREVIEW_TAB\"         : \"Önizleme\",\n    \n    \"WIZARD_LINES\"        : \"satırlar\",\n    \"WIZARD_LAYOUT\"       : \"düzen\",\n    \"WIZARD_CONTROLS\"     : \"kontroller\",\n    \"WIZARD_SAVE\"         : \"kaydet\",\n    \n    \"PAGER_PREVIOUS\"      : \"Geri\",\n    \"PAGER_NEXT\"          : \"İleri\",\n    \n    \"COMMAND_PANEL\"       : \"Komut\",\n    \"VISUAL_PANEL\"        : \"Görsel\",\n    \n    \"ADD_NEW_LINE\"        : \"Yeni satır ekle\",\n    \n    \"SELECTED_LINE\"       : \"Seçili satır\",\n    \n    \"NUMBER_OF_COLUMN\"    : \"sütun sayısı\",\n    \"APPLY_CTRL2COL\"      : \"Sütunlara form ögesi ekle\",\n    \n    \"CLIC_TAP_2_OPEN\"     : \"Form ögesi eklemek için sütunlara tıkla\",\n    \"SELECT_2_APPLY_COL\"  : \"İstediğin ögeyi seçtikten sonra gerekli yerleri doldur ve kaydet\",\n    \n    \"CUSTOM_SUBMIT_BTN\"   : \"Gönder butonu yazısını düzenle\",\n    \"CUSTOM_CANCEL_BTN\"   : \"İptal butonu yazısını düzenle\",\n    \"NAME_THIS_FORM\"      : \"Forma isim ver\",\n    \"SAVE_THIS_FORM\"      : \"formu kaydet\",\n    \n    \"FINAL_STEP\"          : \"Son aşama : form önizlemesi\",\n    \n    \"DATA_MODEL\"          : \"VERİ MODELİ\",\n    \"FIELDS_MODEL\"        : \"ALAN MODELİ (veritabanına kaydetmeye hazır)\",\n    \n    \n    \"SELECT_A_CTRL\"       : \"Form ögesi seç\",\n    \"SELECT_CTRL_IN_LIST\" : \"Verilen listeden bir form ögesi seç\",\n    \"COL_WILL_BE_BLANK\"   : \"Sütun boş kalacak\",\n    \n    \"EDIT_PROPERTIES\"     : \"Özellikleri düzenle\",\n    \n    \"HEADER_TEXT\"         : \"Başlık yazısı\",\n    \"ADD_EDIT_HEADER_HERE\": \"Başlık yazısını ekle / düzenle\",\n    \n    \"SUBTITLE_TEXT\"       : \"Altyazı\",\n    \"ADD_EDIT_SUBTIL_HERE\": \"Altyazı ekle / düzenle\",\n    \n    \"LABEL_TEXT\"          : \"Form ögesinin adı\",\n    \"ADD_EDIT_LABEL_HERE\" : \"Ad ekle / düzenle\",\n    \n    \"PLACEHOLDER\"         : \"Form ögesinin içine geçici yazı ekle\",\n    \"ADD_EDIT_PLACEHOLD\"  : \"Geçici yazı ekle / düzenle\",\n    \n    \"REQUIRED\"            : \"Gerekli\",\n    \n    \"DESCRIPTION\"         : \"Açıklama\",\n    \"ADDEDIT_DESCRIPTION\" : \"Açıklama ekle / düzenle\",\n    \n    \"DATE_FORMAT\"         : \"Tarih formatı\",\n    \n    \"ADD_NEW_RADIO\"       : \"Radio butonu ekle\",\n    \"ADD_RADIO_PLACEHOLD\" : \"radio butonu ekle\",\n    \"EDIT_REMOVE_RADIO\"   : \"Radio butonunu ekle / düzenle\",\n    \"NO_RADIO_ADD_NEW\"    : \"radio butonu yok : yeni buton ekle\",\n    \n    \"SEARCH_4_OPTION\"     : \"seçenek ara\",\n    \n    \"ADD\"                 : \"ekle\",\n    \"ORDER\"               : \"sıra\",\n    \"OPTION\"              : \"seçenek\",\n    \"GROUP\"               : \"grup\",\n    \n    \"ADD_NEW_OPTIONS\"     : \"Yeni seçenek ekle\",\n    \"ADD_A_NEW_OPTION\"    : \"yeni seçenek ekle\",\n    \"EDIT_REMOVE_OPTIONS\" : \"Seçenekleri düzenle/sil\",\n    \"NO_OPTION_ADD_NEW\"   : \"seçenek yok : yeni seçenek ekle\",\n    \n    \"ADD_NEW_GROUPS\"      : \"Yeni grup ekle\",\n    \"ADD_A_NEW_GROUP\"     : \"Yeni grup ekle\",\n    \"EDIT_GROUPS_OPTIONS\" : \"Seçenek/Grup Ekle/sil\",\n    \"NO_GROUP_ADD_NEW\"    : \"yeni grup ekle\",\n    \n    \"OK\"                  : \"TAMAM\",\n    \"CANCEL\"              : \"İptal\"\n});\n}]);\n\n/**\n *  ------------------------------------------------------\n *  module core : injects core \"non app modules\"\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('eda.easyFormSteWayConfigProvider', [])\n\t\t.provider('easyFormSteWayConfig', easyFormSteWayConfigFct);\n\t\t\n\t\teasyFormSteWayConfigFct.$inject = ['$translateProvider'];\n\t\t\n\t\tfunction easyFormSteWayConfigFct($translateProvider){\n\t\t\tvar _configuration \t\t\t\t\t= defaultConfig();\n\t\t\tvar _controlsList\t\t\t\t\t\t= controlsList();\n\t\t\tvar _defaultLanguage\t\t\t\t= getDefaultLanguage();\n\t\t\tvar _currentLanguage\t\t\t\t= initDefaultLanguage();\n\t\t\tvar _showPreviewPanel\t\t\t\t= getDefaultshowPreviewPanel();\n\t\t\tvar _showPreviewModels\t\t\t= getDefaultShowPreviewModel();\n\t\t\t/* jshint validthis:true */\n\t\t\tthis.$get \t\t\t\t\t\t\t\t\t= easyFormSteWayConfig;\n\t\t\tthis.setModalAnimation \t\t\t= setModalAnimation;\n\t\t\tthis.getModalAnimation\t\t\t= getModalAnimation;\n\t\t\tthis.configuration \t\t\t\t\t= _configuration;\n\t\t\tthis.getEnabledControls \t\t= getEnabledControls;\n\t\t\tthis.disableControl\t\t\t\t\t= disableControl;\n\t\t\tthis.enableControl\t\t\t\t\t= enableControl;\n\t\t\tthis.setLanguage\t\t\t\t\t\t= setLanguage;\n\t\t\tthis.getCurrentLanguage\t\t\t= getCurrentLanguage;\n\t\t\tthis.showPreviewPanel\t\t\t\t= showPreviewPanel;\n\t\t\tthis.showPreviewModels\t\t\t= showPreviewModels;\n    \t\n\t\t\n\t\t\t\n\t\t\n\t\t\t//set default config\n\t\t\tfunction defaultConfig(){\n\t\t\t\tvar _defaultConfiguration = {\n\t\t\t\t\tmodalAnimated : false\n\t\t\t\t};\n\t\t\t\treturn _defaultConfiguration;\n\t\t\t}\n\t\t\t\n\t\t\t//show preview panel by default\n\t\t\tfunction getDefaultshowPreviewPanel(){\n\t\t\t \treturn true;\n\t\t\t}\n\t\t\t\n\t\t\t//show preview data, fields models in preview panel\n\t\t\tfunction getDefaultShowPreviewModel(){\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\n\t\t\tfunction controlsList(){\n\t\t\t\tvar controls = [\n\t\t\t\t\t{name: 'empty', \t\t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'Header', \t\t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'Subtitle', \t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'TextInput', \t\t\tenabled: true},\n\t\t\t\t\t{name: 'Password', \t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'Date', \t\t\t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'Texarea',\t \t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'RichTextEditor', \tenabled: true},\n\t\t\t\t\t{name: 'Radio', \t\t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'Checkbox', \t\t\t\tenabled: true},\n\t\t\t\t\t{name: 'BasicSelect', \t\tenabled: true},\n\t\t\t\t\t{name: 'GroupedSelect', \tenabled: true}\n\t\t\t\t];\n\t\t\t\t\t\n\t\t\t\treturn controls;\n\t\t\t}\n\t\t\t\n\t\t\tfunction setModalAnimation(flagConfig){\n\t\t\t\tvar valueToApply = (flagConfig === true) ? \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  flagConfig  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: (flagConfig === false ? \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  flagConfig \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: _configuration.modalAnimated);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t_configuration.modalAnimated = valueToApply;\n\t\t\t}\n\n\t\t\tfunction getModalAnimation(){\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\treturn _configuration.modalAnimated;\n\t\t\t}\t\t\n\t\t\t\n\t\t\t\n\t\t\tfunction getEnabledControls(){\n\t\t\t\treturn _controlsList;\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfunction disableControl(controlName){\n\t\t\t\tif (angular.isString(controlName)) {\n\t\t\t\t\tangular.forEach(_controlsList, function(aControl){\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (aControl.name === controlName) {\n\t\t\t\t\t\t\taControl.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction showPreviewPanel(wantToShow){\n\t\t\t\tif (angular.isDefined(wantToShow)) {\n\t\t\t\t\tif(wantToShow === true) \t_showPreviewPanel \t= true;\n\t\t\t\t\tif(wantToShow === false) \t_showPreviewPanel \t= false;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction showPreviewModels(wantToShow){\n\t\t\t\tif (angular.isDefined(wantToShow)) {\n\t\t\t\t\tif(wantToShow === true) \t_showPreviewModels \t= true;\n\t\t\t\t\tif(wantToShow === false) \t_showPreviewModels \t= false;\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\tfunction enableControl(controlName){\n\t\t\t\tif (angular.isString(controlName)) {\n\t\t\t\t\tangular.forEach(_controlsList, function(aControl){\n\t\t\t\t\t\tif (aControl.name === controlName) {\n\t\t\t\t\t\t\taControl.enabled = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\t\t\t\t\t\t\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\n\t\t\tfunction getDefaultLanguage(){\n\t\t\t\tvar lang = 'en';\n\t\t\t\treturn lang;\n\t\t\t}\n\t\t\t\n\t\t\tfunction initDefaultLanguage(){\n  \t\t\t$translateProvider.useSanitizeValueStrategy('escape'); \t//security : Enable escaping of HTML\n\t\t\t\t$translateProvider.fallbackLanguage(_defaultLanguage);\t//fallback language to default language\n\t\t\t\t$translateProvider.preferredLanguage(_defaultLanguage);\n\t\t\t\treturn _defaultLanguage;\n\t\t\t}\t\t\t\n\t\t\t\n\t\t\t\n\t\t\tfunction setDefaultLanguage(){\n\t\t\t\t_currentLanguage = _defaultLanguage;\n\t\t\t\t$translateProvider.preferredLanguage(_currentLanguage);\n\t\t\t\treturn _currentLanguage;\n\t\t\t}\n\t\t\t\n\t\t\tfunction setLanguage(language){\t\t\t\t\n\t\t\t\tif (angular.isString(language)) {\n\t\t\t\t\t_currentLanguage = language;\n\t\t\t\t\t$translateProvider.preferredLanguage(language);\n\t\t\t\t}else{\n\t\t\t\t\tsetDefaultLanguage();\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction getCurrentLanguage(){\n\t\t\t\t return _currentLanguage;\n\t\t\t}\n\t\t\t\t\n\t\t\n\t\t\t//$get implementation :\n\t\t\teasyFormSteWayConfig.$inject = ['$translate'];\n\t\t\tfunction easyFormSteWayConfig($translate){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tvar service = {\n\t\t\t\t\tsetModalAnimation \t\t\t: setModalAnimationFct,\n\t\t\t\t\tgetModalAnimationValue \t: getModalAnimationValue,\n\t\t\t\t\tgetListEnabledControl\t\t: getListEnabledControl,\n\t\t\t\t\tsetLanguage \t\t\t\t\t\t: switchLanguage,\n\t\t\t\t\tgetCurrentLanguage\t\t\t: getCurrentLanguage,\n\t\t\t\t\tisPreviewPanelVisible\t\t: isPreviewPanelVisible,\n\t\t\t\t\tarePreviewModelsVisible\t: arePreviewModelsVisible\n \t\t\t\t\t\n\t\t\t\t};\n\t\t\t\treturn service;\n\t\t\t\t\n\t\t\t\t\n\t\t\t\tfunction getModalAnimationValue(){\n\t\t\t\t\treturn _configuration.modalAnimated;\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t\tfunction setModalAnimationFct(value){\n\t\t\t\t\tsetModalAnimation(value);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction getListEnabledControl(){\n\t\t\t\t\treturn angular.copy(_controlsList);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction isPreviewPanelVisible(){\n\t\t\t\t\treturn _showPreviewPanel;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfunction arePreviewModelsVisible(){\n\t\t\t\t\treturn _showPreviewModels;\n\t\t\t\t}\t\n\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\tfunction switchLanguage(language){\n\t\t\t\t\tif (angular.isString(language)) {\n\t\t\t\t\t\t_currentLanguage = language;\n\t\t\t\t\t\t$translate.use(language);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tsetDefaultLanguage();\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\n\t\t\t\t\n\t\t\t}\n\t\t\n\t\t}\n\t\t\n\t\t\n\t\t\n})();\n/**\n *  ------------------------------------------------------\n *  controllers container\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n(function () {\n\t'use strict';\n\n\n\tangular.module('ngwfApp.controllers', [\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.controllers.ngwfMainController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.controllers.ngwfWfEditController',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.controllers.ngwfWfEditMODALController'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t);\n\n})(); \n\n\n/**\n *  ------------------------------------------------------\n *  module = \"controller\" main controller\n *  ------------------------------------------------------\n *\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.controllers.ngwfMainController', [])\n\t\t.controller('ngwfMainController', ngwfMainController);\n\n\t\tngwfMainController.$inject = ['$scope', '$timeout'];\n\t\tfunction ngwfMainController($scope, $timeout){\n\t\t\t\n\t\t\t$scope.FormNameAsTest = 'initial_name';\n\t\t\t\n\t\t\t$timeout(function(){\n\t\t\t\t$scope.FormNameAsTest = 'name changed after 3s';\n\t\t\t}, 3000);\n\t\t}\n\n})(); \n\n\n/**\n *  ------------------------------------------------------\n *  module = \"controller\" edit controller\n *  ------------------------------------------------------\n *\n * Main controller :\n * \n *  - configuration model : fields model database friendly\n *  - formlymodel : fields model bound to formly directive (not database freindly)\n *  - vm.model : data model (database friendly)\n *\n * if you want more details on how to save to data base :\n *\n * http://www.erwan-datin.com/tips/how-do-I-store-angular-formly-fields-model-into-database\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function () {\n\n  'use strict';\n\n  angular\n    .module('ngwfApp.controllers.ngwfWfEditController', [])\n    .controller('ngwfWfEditController', ngwfWfEditController);\n\n\n    ngwfWfEditController.$inject = [\n      '$scope', \n      '$templateCache',\n      'easyFormGenVersion',\n      '$filter',\n      '$anchorScroll',\n      'toaster', \n      '$timeout',\n        '$uibModal',\n      '$log', \n      'formFieldManage',\n      'controllerModalProxy',\n      'easyFormSteWayConfig'\n    ];\n\n    \n    function ngwfWfEditController($scope,\n                                  $templateCache,\n                                  easyFormGenVersion,\n                                  $filter,\n                                  $anchorScroll,\n                                  toaster,\n                                  $timeout,\n                                  $uibModal,\n                                  $log,\n                                  formFieldManage,\n                                  controllerModalProxy,\n                                  easyFormSteWayConfig\n                                    ){\n      /*jshint validthis: true */\n      $scope.vm                       = this;\n      $scope.vm.model                 = {};\n      $scope.vm.wfFormFields          = [];\n      $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n      $scope.vm.onSubmit              = onSubmit;\n\n      $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n      $scope.debug                    = initDebugModel();\n      $scope.tab                      = initTabModel();\n\n      //configuration model (contains array of lines which contains array of columns)\n      $scope.configuration            = {};    \n                               \n      $scope.numberOfColumns          = 1;\n      $scope.MaxNumberOfColumns       = 3;\n      $scope.MinNumberOfColumns       = 1;\n      $scope.columnTemplate           = initColumnTemplate();\n\n      $scope.lineTemplate             = initLineTemplate();\n      $scope.resetToZeroModel         = resetToZeroModel;\n      $scope.countConfigurationModelLines = countConfigurationModelLines;\n      $scope.setActiveLineNumber      = setActiveLineNumber;\n      $scope.upThisLine               = upThisLine;\n      $scope.downThisLine             = downThisLine;\n      $scope.addNewline               = addNewline;\n      $scope.removeThisLine           = removeThisLine;\n\n      $scope.increaseNumberOfColumns  = increaseNumberOfColumns;\n      $scope.decreaseNumberOfColumns  = decreaseNumberOfColumns;\n\n      $scope.resetStepCounter         = resetStepCounter;\n      $scope.nextConfigStep           = nextConfigStep;\n\n      $scope.previousConfigStep       = previousConfigStep;\n      $scope.stepReachable            = stepReachable;\n\n      $scope.nyaSelect                = {};\n      //angular bootstrap modal + angular 1.4 issue (backdrop won't disapear on close modal)\n      //github issues here : https://github.com/angular-ui/bootstrap/issues/3633\n      //-> disabling animation untill correction in angular bootstrap \n      //uses easyFormSteWayConfig provider to easily update setting : \n      $scope.animationsEnabled        = easyFormSteWayConfig.getModalAnimationValue();\n      //call modal to edit selected control\n      $scope.showModalAddCtrlToColumn = showModalAddCtrlToColumn;\n\n      \n      //disabled here : to load list of saved formly fields from database\n      $scope.loadExistingFormsList    = loadExistingFormsAsList();\n      $scope.formlyList               = {};\n      $scope.previewLoadedForm        = { fieldsModel:[] };\n      $scope.configurationLoaded      = {};   \n      $scope.previewExistingform      = previewExistingform;\n      $scope.saveThisForm             = saveThisForm; //should save to database (commented here)\n\n\n   \n\n\n      \n\n\n\n      //load formlyList on init\n      loadExistingFormsAsList();\n\n      formFieldManage.initConfigurationEditFromScratch($scope.configuration);\n\n      controllerModalProxy.initNyaSelect($scope.nyaSelect);\n\n\n\n      function initDebugModel(){\n        return {\n         showDebug : false,\n         configurationModelNumberofLines : 1        \n        };\n      }\n\n      function initTabModel(){\n        return {\n          editTab : {active : true},\n          previewTab : {active : false}\n        };\n      }\n\n      function previewExistingform(formlyform){\n       var configlines = JSON.parse(formlyform.formlyField);\n       //here to replace with $scope.configuration : initialise configuration with lines \n       $scope.configurationLoaded = {};\n       formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n       formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n       $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n       $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n       $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n      }    \n\n      function onSubmit() {\n        toaster.pop({\n            type: 'info',\n            timeout:2000,\n            title: 'should save data model if it were not a static example',\n            body: 'data :' + $filter('json')($scope.vm.model, 4),                \n            showCloseButton: true\n        }); \n      }\n      \n      function initColumnTemplate(){\n        return  {\n          numColumn: -1,\n          exist:true, \n          control: {\n            type:'none',\n            key: 'none',\n            subtype: 'none',\n            // templateOptions: {\n            //                     label: 'none',\n            //                     placeholder: 'none',\n            //                     required: false,\n            //                     description: 'Descriptive text'\n            //                   }\n          }                                         \n        };\n      }\n\n      function initLineTemplate(){\n        return {\n          line:-1, \n          activeColumn : 1,\n          columns: [\n            {  \n              numColumn: 1,\n              exist:true, \n              control: {\n                type:'none',\n                key: 'none',\n                // templateOptions: {\n                //                     label: 'none',\n                //                     placeholder: 'none',\n                //                     required: false,\n                //                     description: 'Descriptive text'\n                //                   }\n                }\n              }\n            ]\n        };\n      }\n\n      function resetToZeroModel(){\n        $scope.configuration.activeLine = 1;\n        if ($scope.configuration.lines.length > 1) {\n          $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n        }\n        return $scope.countConfigurationModelLines();\n      }\n\n      function countConfigurationModelLines(){\n        //information in debug model\n        $scope.debug.configurationModelNumberofLines = $scope.configuration.lines.length;\n        return $scope.configuration.lines.length;\n      }      \n\n      function setActiveLineNumber(lineNumber){\n        if (lineNumber <= $scope.countConfigurationModelLines()) {\n          $scope.configuration.activeLine = lineNumber;\n        }\n      } \n\n      function upThisLine(indexLine){    \n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine - 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);    \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n      }  \n\n      function downThisLine(indexLine){\n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine + 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }     \n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n      } \n\n      function addNewline(){\n        $scope.configuration.lines.push(\n          {\n            line:-1, \n            activeColumn : 1,\n            columns: [\n                      {  \n                        numColumn: 1,\n                        exist:true, \n                        control: {\n                                    type:'none',\n                                    key: 'none',\n                                    // templateOptions: {\n                                    //                     label: 'none',\n                                    //                     placeholder: 'none',\n                                    //                     required: false,\n                                    //                     description: 'Descriptive text'\n                                    //                   }\n                                  }\n                        }\n                      ]\n            }\n        );\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n      }\n\n      function removeThisLine(index){\n        if (index > -1) {\n          if ($scope.configuration.lines.length > 1) {\n              //manage selected aciveLine\n              if ($scope.configuration.activeLine === index + 1) {\n                $scope.configuration.activeLine = 1;\n              }\n              $scope.configuration.lines.splice(index, 1);\n          }else{\n            $timeout(function(){\n                toaster.pop({\n                        type: 'warning',\n                        title: 'Last line' ,\n                        body: 'Can\\'t delete the last line',                \n                        showCloseButton: true\n                  });\n            }, 100); \n          }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n        }\n      }\n\n      function increaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length < $scope.MaxNumberOfColumns) {\n\n          var newNumberOfColumns = $scope\n                                      .configuration\n                                      .lines[$scope.configuration.activeLine -1]\n                                      .columns\n                                      .push(\n                                            {\n                                              numColumn: -1,\n                                              exist: true, \n                                              control: {\n                                                          type:'none',\n                                                          key: 'none'\n                                                          // templateOptions: {\n                                                          //                     label: 'none',\n                                                          //                     placeholder: 'none',\n                                                          //                     required: false,\n                                                          //                     description: 'Descriptive text'\n                                                          //                   }\n                                                        }                                         \n                                             }                                        \n                                            );\n          $scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns[newNumberOfColumns - 1]\n              .numColumn = newNumberOfColumns; \n          }\n           //re-render formfield \n          formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n          $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n      }  \n\n      function decreaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length > 1) {\n          $scope.configuration\n            .lines[$scope.configuration.activeLine -1]\n            .columns\n            .splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n        }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n      }  \n\n      function resetStepCounter(){\n        $scope.configuration.configStepCounter = 0;\n      } \n\n      function nextConfigStep(){\n        var configStepCounterMAX = $scope.configuration.listConfigStep.length -1;\n        if ($scope.configuration.configStepCounter !== configStepCounterMAX) {\n            $scope.configuration.configStepCounter ++;\n        }    \n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }   \n\n      function previousConfigStep(){\n        if ($scope.configuration.configStepCounter !== 0) {\n          $scope.configuration.configStepCounter --;\n        }\n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }\n\n      function stepReachable(indexStep){\n        if (indexStep < $scope.configuration.configStepCounter) {\n          return 'disabled';\n        }else{\n          return 'enabled';\n        }\n      } \n\n      function showModalAddCtrlToColumn(size, indexLine, numcolumn) {\n\n          var modalInstance = $uibModal.open({\n                                          animation: $scope.animationsEnabled,\n                                          templateUrl: 'editModalTemplate.html',  \n                                          controller: 'ngwfWfEditMODALController',\n                                          size: 'lg',\n                                          resolve: {\n                                            nyaSelect: function () {                                              \n                                              return controllerModalProxy\n                                                        .getNyASelectFromSelectedLineColumn($scope.nyaSelect, $scope.configuration,indexLine, numcolumn);\n                                            }\n                                          }\n        });\n\n        modalInstance.result.then(function (modalAddCtrlModel) {\n            controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n            formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n\n        }, function () {\n          //$log.info('Modal dismissed at: ' + new Date());\n        });\n      } \n\n      /**\n       * loadExistingFormsAsList :\n       *  - LOAD from database (list of forms)\n       */\n      function loadExistingFormsAsList(){\n        \n      }\n      /**\n       * saveThisForm \n       * - SAVE to database (current stringified configuration model === current form)\n       */\n      function saveThisForm(){\n        if (typeof $scope.configuration.formName === 'undefined') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is undefined',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        if ($scope.configuration.formName === '') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is required',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        toaster.pop({\n                type: 'wait',\n                timeout:10000,\n                title: 'Form is being saved',\n                body: 'Wait.',                \n                showCloseButton: true\n        });\n\n       \n        toaster.clear();  \n        toaster.pop({\n                type: 'info',\n                timeout:2000,\n                title: 'Form would be saved if it were not a static example',\n                body: '',                \n                showCloseButton: true\n          }); \n        return true;\n      } \n\n\n\n\n      function resetAllIndicators(){\n        for (var i = $scope.configuration.stepIndicators.length - 1; i >= 0; i--) {\n          $scope.configuration.stepIndicators[i] = false;\n        }\n      }\n      \n      function setTrueThisStepIndicator(indexIndicator){\n          resetAllIndicators();\n          $scope.configuration.stepIndicators[indexIndicator] = true;    \n      }\n\n\n\n\n\n    }\n\n\n})(); \n/**\n *  ------------------------------------------------------\n *  module = \"controller\" modal controller\n *  ------------------------------------------------------\n *\n * edit control modal controller\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n(function () {\n  'use strict';\n\n\n  angular\n    .module('ngwfApp.controllers.ngwfWfEditMODALController', [])\n    .controller('ngwfWfEditMODALController', ngwfWfEditMODALController);\n\n    ngwfWfEditMODALController.$inject = [\n        '$scope',\n        '$uibModalInstance',\n      'nyaSelect',\n      'toaster' ,\n      '$timeout',\n      'selectOptionManage',\n      'controllerModalProxy',\n    ];\n\n    function ngwfWfEditMODALController($scope,\n                                       $uibModalInstance,\n                                       nyaSelect,\n                                       toaster,\n                                       $timeout,\n                                       selectOptionManage,\n                                       controllerModalProxy\n                                      ){\n      \n      var initOptionModel = { rows:[] };\n\n      $scope.radioRowCollection = initOptionModel;\n      $scope.newOptionRadio     = {saisie: ''};\n\n      $scope.addNewOptionRadio  = addNewOptionRadio;\n      $scope.removeRadioRow     = removeRadioRow;\n      $scope.upThisRadioRow     = upThisRadioRow;\n      $scope.downThisRadioRow   = downThisRadioRow;\n\n      $scope.basicSelectRowCollection = initOptionModel;\n      $scope.newOptionBasicSelect     = {saisie: ''}; \n      $scope.addNewOptionBasicSelect  = addNewOptionBasicSelect;\n      $scope.removeRow                = removeRow;\n      $scope.upThisRow                = upThisRow;\n      $scope.downThisRow              = downThisRow;\n\n      $scope.groupedSelectRowCollection = initOptionModel;\n      $scope.newOptionGroupedSelect     = {saisie: ''};\n      $scope.GroupedSelectGroups        = { list:[] };\n      $scope.newGroupGroupedSelect      = {saisie: ''};  \n      $scope.groupSelectGroupClick      = {showList : false};\n      $scope.showGroupListToChoose      = showGroupListToChoose;\n      $scope.addNewGroupToGroupedSelect = addNewGroupToGroupedSelect;\n      $scope.addNewOptionGroupedSelect  = addNewOptionGroupedSelect;\n      $scope.removeGroupedSelectRow     = removeGroupedSelectRow;\n      $scope.upThisGroupedSelectRow     = upThisGroupedSelectRow;\n      $scope.downThisGroupedSelectRow   = downThisGroupedSelectRow;\n\n      $scope.demodt         = {}; \n      $scope.today          = today;\n      $scope.clear          = clear;\n      $scope.open           = openfct;\n      $scope.dateOptions    = dateOptionsInit(); \n      $scope.demodt.formats = ['dd-MMMM-yyyy', 'yyyy/MM/dd', 'dd.MM.yyyy', 'shortDate'];\n\n      $scope.nyaSelect                  = nyaSelect ;\n      $scope.nyaSelect.selectedControl  = $scope.nyaSelect.temporyConfig.selectedControl;\n      $scope.selectThisControl          = selectThisControl;\n      $scope.ok                         = okfct;\n      $scope.cancel                     = cancelfct;\n      $scope.nyaSelectFiltered          = {};\n\n\n\n      //init today date\n      today();\n      //init nyaSelect model depending selected control\n      initNyaSelectConformingSelectedControl();\n    \n      function initNyaSelectFiltered(){\n        $scope.nyaSelectFiltered = {};\n        var listCtrl = [].concat(controllerModalProxy.getFilteredNyaSelectObject());\n        angular.extend($scope.nyaSelectFiltered,{\n          'controls'        : listCtrl,\n          'selectedControl' : $scope.nyaSelect.selectedControl,\n          'temporyConfig'   : $scope.nyaSelect.temporyConfig \n        }); \n      }\n    \n    \n    \n      function addNewOptionRadio(){\n        var result = selectOptionManage.addNewOptionRadio($scope.radioRowCollection, $scope.newOptionRadio.saisie);\n        if (result.resultFlag === false) {\n              toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: result.details,\n                body: '\\''+ $scope.newOptionRadio.saisie + '\\'' + ' cannot be added.',                \n                showCloseButton: true\n          });\n        }\n        //reset input\n        $scope.newOptionRadio = {saisie: ''};\n      }\n\n      function removeRadioRow(index) {\n        var result = selectOptionManage.removeOption($scope.radioRowCollection, index);\n        if (result.resultFlag === false) {\n            toaster.pop({\n              type: 'warning',\n              timeout:2000,\n              title: result.details,\n              body: 'Delete was cancelled.',                \n              showCloseButton: true\n          });\n        }      \n      } \n\n      function upThisRadioRow(index){\n        var result = selectOptionManage.upthisOption($scope.radioRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }       \n      }\n\n      function downThisRadioRow(index){\n        var result = selectOptionManage.downthisOption($scope.radioRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }\n      }\n\n      function addNewOptionBasicSelect(){\n        var result = selectOptionManage.addNewOptionBasicSelect($scope.basicSelectRowCollection, $scope.newOptionBasicSelect.saisie);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: '\\''+ $scope.newOptionBasicSelect.saisie + '\\'' + ' cannot be added.',                \n            showCloseButton: true\n          });\n        }\n        //reset input\n        $scope.newOptionBasicSelect = {saisie: ''};\n      }  \n\n      function removeRow(index) {\n        var result = selectOptionManage.removeOption($scope.basicSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Delete was cancelled.',                \n            showCloseButton: true\n          });\n        }      \n      }   \n\n      function upThisRow(index){\n        var result = selectOptionManage.upthisOption($scope.basicSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }       \n      }\n\n      function downThisRow(index){\n        var result = selectOptionManage.downthisOption($scope.basicSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        }\n      }\n\n      function showGroupListToChoose(){\n        $scope.groupSelectGroupClick.showList = !$scope.groupSelectGroupClick.showList;\n      }\n\n      function addNewGroupToGroupedSelect(){\n        if ($scope.newGroupGroupedSelect.saisie !== '') {\n          for (var i = $scope.GroupedSelectGroups.list.length - 1; i >= 0; i--) {\n            if ($scope.GroupedSelectGroups.list[i] === $scope.newGroupGroupedSelect.saisie) {\n              toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Group already exists',\n                body: 'No group added.',                \n                showCloseButton: true\n              });          \n            }\n          }\n          $scope.GroupedSelectGroups.list.push($scope.newGroupGroupedSelect.saisie);\n        }else{\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: 'Not a valid group to add',\n            body: 'No group added.',                \n            showCloseButton: true\n          });\n        }\n        $scope.newGroupGroupedSelect.saisie = '';\n      } \n\n      function addNewOptionGroupedSelect(){\n        var result = selectOptionManage.addNewOptionGroupedSelect($scope.groupedSelectRowCollection, $scope.newOptionGroupedSelect.saisie, '');\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: '\\''+ $scope.newOptionGroupedSelect.saisie + '\\'' + ' cannot be added.',                \n            showCloseButton: true\n          });\n        }\n        //bind nya : dont bind here $apply is not done fast enough\n        //bindGroupedSelectToNya();\n        //reset input\n        $scope.newOptionGroupedSelect = {saisie: ''};\n      }\n\n      function removeGroupedSelectRow(index) {\n        var result = selectOptionManage.removeOption($scope.groupedSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Delete was cancelled.',                \n            showCloseButton: true\n          });\n        }   \n      }        \n\n      function upThisGroupedSelectRow(index){\n        var result = selectOptionManage.upthisOption($scope.groupedSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        } \n      }\n\n      function downThisGroupedSelectRow(index){\n        var result = selectOptionManage.downthisOption($scope.groupedSelectRowCollection, index);\n        if (result.resultFlag === false) {\n          toaster.pop({\n            type: 'warning',\n            timeout:2000,\n            title: result.details,\n            body: 'Operation cancelled.',                \n            showCloseButton: true\n          });\n        } \n      }\n\n      function today() {\n        $scope.demodt.dt = new Date();\n      } \n\n      function clear() {\n        $scope.demodt.dt = null;\n      } \n\n      function openfct($event){\n        $event.preventDefault();\n        $event.stopPropagation();\n        $scope.demodt.opened = true;\n      }\n\n      function dateOptionsInit(){\n        return  {\n          formatYear: 'yy',\n          startingDay: 1,\n          showWeeks: true,\n          initDate: null\n        };\n      }\n\n\n      function selectThisControl(controlName){\n        $scope.nyaSelect.selectedControl = 'none';\n        resetTemporyConfig();\n\n        for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n          if ($scope.nyaSelect.controls[i].id === controlName) {\n            $scope.nyaSelect.selectedControl = $scope.nyaSelect.controls[i].id;         \n          }\n        }\n\n        if ($scope.nyaSelect.selectedControl === 'Date') {\n          initDatePicker();\n        }\n      }  \n\n\n\n      function okfct() {\n        if ($scope.nyaSelect.selectedControl === 'BasicSelect') {\n          bindBasicSelectToNya();\n        }\n        if ($scope.nyaSelect.selectedControl === 'GroupedSelect') {\n          bindGroupedSelectToNya();\n        }  \n        if ($scope.nyaSelect.selectedControl === 'Radio') {\n          bindRadioToNya();\n        }  \n        //save config to control\n        controllerModalProxy.applyConfigToSelectedControl($scope.nyaSelect);\n        //return current model to parent controller :\n          $uibModalInstance.close($scope.nyaSelect);\n      }\n\n      function cancelfct() {\n          $uibModalInstance.dismiss('cancel');\n      }    \n\n\n\n\n\n\n\n      function bindRadioFromNYA(){\n        if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n          for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n            var newOption = {\n                'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n                'order': i,\n                'group': ''\n            };\n            $scope.radioRowCollection.rows.push(newOption);\n          }    \n        }\n      }\n\n      function bindRadioToNya(){\n        var resetNyASelectOptions = [];\n        $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n        if ($scope.radioRowCollection.rows.length > 0) {\n          for (var i = 0; i <= $scope.radioRowCollection.rows.length - 1; i++){\n                var newOption = {\n                  'name': $scope.radioRowCollection.rows[i].option,\n                  'value': i,\n                  'group': ''\n                };\n                $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);   \n            }       \n       }\n      }\n\n      function bindBasicSelectFromNYA(){\n        if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n          for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n            var newOption = {\n              'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n              'order': i,\n              'group': ''\n            };\n            $scope.basicSelectRowCollection.rows.push(newOption);\n          }    \n        }\n      }\n\n      function bindBasicSelectToNya(){\n        var resetNyASelectOptions = [];\n        $scope.nyaSelect.temporyConfig.formlyOptions = resetNyASelectOptions;\n        if ($scope.basicSelectRowCollection.rows.length > 0) {\n          for (var i = 0; i <= $scope.basicSelectRowCollection.rows.length - 1; i++){\n            var newOption = {\n              'name': $scope.basicSelectRowCollection.rows[i].option,\n              'value': i,\n              'group': ''\n            };\n            $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);\n          }      \n        }\n      } \n\n      function bindGroupedSelectFromNYA(){\n        if ($scope.nyaSelect.temporyConfig.formlyOptions.length > 0) {\n          for (var i = 0; i <= $scope.nyaSelect.temporyConfig.formlyOptions.length-1; i++){\n            var newOption = {\n              'option': $scope.nyaSelect.temporyConfig.formlyOptions[i].name,\n              'order': i,\n              'group': $scope.nyaSelect.temporyConfig.formlyOptions[i].group\n            };\n            $scope.groupedSelectRowCollection.rows.push(newOption);            \n          }\n          //grouplist : thx to lodash it is easy\n          var filteredgroup = _.uniq(_.pluck($scope.groupedSelectRowCollection.rows, 'group'));\n          angular.copy(filteredgroup, $scope.GroupedSelectGroups.list); \n        }\n      }\n\n      function bindGroupedSelectToNya(){\n        $scope.nyaSelect.temporyConfig.formlyOptions = [];\n        for (var i = 0; i <= $scope.groupedSelectRowCollection.rows.length - 1; i++){\n          var newOption = {\n            'name': $scope.groupedSelectRowCollection.rows[i].option,\n            'value': i,\n            'group': $scope.groupedSelectRowCollection.rows[i].group\n          };\n          $scope.nyaSelect.temporyConfig.formlyOptions.push(newOption);  \n        }\n      } \n\n      function initDatePicker(){\n        $scope.nyaSelect.temporyConfig.datepickerPopup = $scope.demodt.formats[0];  \n      }    \n\n      function initNyaSelectConformingSelectedControl(){\n        //place nya-select to selection if not none :\n        //$scope.modelNyaSelect = nyaSelect.controls[0];\n        \n        \n        if (nyaSelect.selectedControl !== 'none') {\n          for (var i = $scope.nyaSelect.controls.length - 1; i >= 0; i--) {\n             if ($scope.nyaSelect.controls[i].id === nyaSelect.selectedControl) {\n                $scope.modelNyaSelect = nyaSelect.controls[i];\n             }\n          }\n          if ($scope.nyaSelect.selectedControl === 'BasicSelect') {\n            bindBasicSelectFromNYA();\n          }\n          if ($scope.nyaSelect.selectedControl === 'GroupedSelect') {\n            bindGroupedSelectFromNYA();\n          } \n          if ($scope.nyaSelect.selectedControl === 'Radio') {\n            bindRadioFromNYA();\n          }    \n        }\n        initNyaSelectFiltered();\n      }\n\n      // //OLD\n      // function resetTemporyConfig(){\n      //   $scope.nyaSelect.temporyConfig = {\n      //     formlyLabel: '', \n      //     formlyRequired: false, \n      //     formlyPlaceholder: '',\n      //     formlyDesciption: '',\n      //     formlyOptions: []\n      //   };   \n      // }\n\n      function resetTemporyConfig(){\n        $scope.nyaSelectFiltered.temporyConfig = {\n          formlyLabel: '', \n          formlyRequired: false, \n          formlyPlaceholder: '',\n          formlyDesciption: '',\n          formlyOptions: []\n        };   \n      }\n\n    }\n\n\n})(); \n/**\n *  ------------------------------------------------------\n *  easy form generator directive (Step way)\n *  ------------------------------------------------------\n * \n *  all easy form generator embeded in a directive\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function(){\n\t'use strict';\n\t\n\tangular\n\t\t.module('ngwfApp.directives.edaStepWayEasyFormGenDirective', [])\n\t\t.directive('edaStepWayEasyFormGen', edaStepWayEasyFormGen);\n\t\t\n\t\tedaStepWayEasyFormGen.$inject = [\n      '$templateCache', \n      '$timeout', \n      'formFieldManage',\n      'controllerModalProxy'];\n\t\t\n\t\tfunction edaStepWayEasyFormGen(\n      $templateCache, \n      $timeout, \n      formFieldManage,\n      controllerModalProxy){\n      \n      /**\n       * directive's controller injection is here (before return directive) = to avoid minification errors\n       * sad but true... -> this reminds me something?!\n       */\n      edaStepWayEasyFormGenCtrl.$inject = [\n        \"$scope\", \n        '$templateCache',\n        'easyFormGenVersion',\n        '$filter',\n        '$anchorScroll',\n        'toaster', \n        '$timeout',\n          '$uibModal',\n        '$log', \n        'formFieldManage',\n        'controllerModalProxy',\n        'easyFormSteWayConfig'\n      ];\n      \n      \n\t\t\tvar directive = {\n\t\t\t\trestrict : 'E',\n\t\t\t\tscope : {\n          edaEasyFormGeneratorModel : '=',\n          edaSaveFormEvent          : '&edaSaveFormEvent'\n        },\n\t\t\t\tcontroller : edaStepWayEasyFormGenCtrl,\n\t\t\t\tcontrollerAs : 'vm',\n\t\t\t\t//bindToController : true, //angular < 1.4, activating this property will break databindings\n\t\t\t\treplace : false,\n\t\t\t\ttemplateUrl : 'edaStepWayEasyFormGeneratorTemplate.html',\n\t\t\t\tlink : linkFct\n\t\t\t};\n\t\t\treturn directive;\n\t\t\t\n\t\t\tfunction linkFct(scope, element, attrs){\n              \n          //watch \"scope.easyFormGeneratorModel\"\n          scope.$watch(watchEdaEasyFormModelExpression, \n            watchEdaEasyFormModelHasChanged, \n            true);          \n         \n          //watch \"scope.returnSaveEvent\"\" = catch saving form event  \n\t\t\t\t\tscope.$watch(watchReturnSaveEventExpression, \n           watchReturnSaveEventhasChanged);\t\n          \n          \n          \n          \n          \n          \n          \n          \n          \n          \n          function returnAttributeConfigurationLinesIfNotEmpty(){\n            var edaEasyFormGeneratorModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.edaFieldsModel) ?  ( \n                    scope.edaEasyFormGeneratorModel.edaFieldsModel.length > 0 ? \n                      scope.edaEasyFormGeneratorModel.edaFieldsModel \n                    : emptyEdaFieldsModel()\n                    ) \n                : emptyEdaFieldsModel()\n            );\n             return edaEasyFormGeneratorModelToReturn;  \n          }\n          \n          /**\n           * empty fields model : to display at least an empty line\n           * otherwise would look like ugly empty line like it were a bug\n           */\n\t\t\t\t\tfunction emptyEdaFieldsModel(){\n\t\t\t\t\t\tvar emptyModel = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"line\": 1,\n\t\t\t\t\t\t\t\t\"activeColumn\": 1,\n\t\t\t\t\t\t\t\t\"columns\": [\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\"numColumn\": 1,\n\t\t\t\t\t\t\t\t\t\t\"exist\": true,\n\t\t\t\t\t\t\t\t\t\t\"control\": {\n\t\t\t\t\t\t\t\t\t\t\t\"type\": \"none\",\n\t\t\t\t\t\t\t\t\t\t\t\"key\": \"none\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t];\n\t\t\t\t\t\treturn emptyModel;\n\t\t\t\t\t}\n          \n          function returnAttributeDataModelIfNotEmpty(){\n            var dataModelToReturn = (\n                angular.isArray(scope.edaEasyFormGeneratorModel.dataModel)   ?  ( \n                    scope.edaEasyFormGeneratorModel.dataModel.length > 0 ? \n                    scope.edaEasyFormGeneratorModel.dataModel \n                    : []\n                   ) \n                : []\n            );\n             return dataModelToReturn;  \n          }          \n          \n          function watchEdaEasyFormModelExpression(){\n            return scope.edaEasyFormGeneratorModel;\n          }\n          \n          function watchEdaEasyFormModelHasChanged(newValue, oldValue){             \n            loadExistingConfigurationModel();          \n          }          \n        \n        \n        \n          function watchReturnSaveEventExpression(){\n            return scope.returnSaveEvent;\n          }\n          \n          function watchReturnSaveEventhasChanged(newValue, oldValue){\n            if (newValue === true) {\n              var _easyFormGeneratorModel = {\n                formName          : scope.configuration.formName,\n                btnSubmitText     : scope.configuration.submitButtonText,\n                btnCancelText     : scope.configuration.cancelButtonText,\n                edaFieldsModel    : scope.configuration.lines,\n                //just as test\n                \n                edaFieldsModelStringified : angular.toJson(scope.configuration.lines),\n                \n                formlyFieldsModel : scope.vm.wfFormFieldsOnlyNeededProperties,\n                dataModel         : scope.vm.model\n              };\n              scope.edaSaveFormEvent({\n                edaEasyFormGeneratorModel      : _easyFormGeneratorModel\n              });\n              //back to false, waiting next save event\n              scope.returnSaveEvent = false;\n            }            \n\t\t\t   }          \n          \n          \n        function loadExistingConfigurationModel(){\n          \n          if(angular.isDefined(scope.edaEasyFormGeneratorModel)){\n            var configlines           = returnAttributeConfigurationLinesIfNotEmpty();           \n            scope.configurationLoaded = {};\n            \n            formFieldManage.bindConfigurationLines(scope.configurationLoaded,configlines);\n            /**\n             * rebind special control properties :\n             * \n             * formly expression properties\n             * Validators\n             * Validation\n             */\n            controllerModalProxy.refreshControlFormlyExpressionProperties(scope.configurationLoaded);\n            controllerModalProxy.refreshControlFormlyValidators(scope.configurationLoaded);\n            controllerModalProxy.refreshControlFormlyValidation(scope.configurationLoaded);\n            \n            //apply configuration model\n            scope.configuration = angular.copy(scope.configurationLoaded);\n            \n            //apply formly model\n            formFieldManage.applyConfigurationToformlyModel(scope.configurationLoaded, scope.vm.wfFormFields, scope.vm.model);          \n            \n            scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy(scope.vm.wfFormFields);\n            scope.vm.model                            = returnAttributeDataModelIfNotEmpty();  \n            scope.configuration.formName              = angular.isString(scope.edaEasyFormGeneratorModel.formName) ? scope.edaEasyFormGeneratorModel.formName : '';\n            scope.configuration.submitButtonText      = angular.isString(scope.edaEasyFormGeneratorModel.btnSubmitText) ? scope.edaEasyFormGeneratorModel.btnSubmitText : 'Submit'; \n            scope.configuration.cancelButtonText      = angular.isString(scope.edaEasyFormGeneratorModel.btnCancelText) ? scope.edaEasyFormGeneratorModel.btnCancelText : 'Cancel';\n          }  \n        } \n         \n         \n          \n          \n          \n          \n          \n          \n                   \n\t\t\t}\n\t\t\t    \n    function edaStepWayEasyFormGenCtrl($scope,\n                                       $templateCache,\n                                       easyFormGenVersion,\n                                       $filter,\n                                       $anchorScroll,\n                                       toaster,\n                                       $timeout,\n                                       $uibModal,\n                                       $log,\n                                       formFieldManage,\n                                       controllerModalProxy,\n                                       easyFormSteWayConfig\n                                    ){\n      /*jshint validthis: true */\n      $scope.vm                       = this;\n      $scope.vm.model                 = {};\n      $scope.vm.wfFormFields          = [];\n      $scope.vm.wfFormFieldsOnlyNeededProperties = []; \n      $scope.vm.onSubmit              = onSubmit;\n\n      $scope.easyFormGeneratorVERSION = easyFormGenVersion;\n      $scope.debug                    = initDebugModel();\n      $scope.tab                      = initTabModel();\n\n      //configuration model (contains array of lines which contains array of columns)\n      $scope.configuration            = {};    \n                               \n      $scope.numberOfColumns          = 1;\n      $scope.MaxNumberOfColumns       = 3;\n      $scope.MinNumberOfColumns       = 1;\n      $scope.columnTemplate           = initColumnTemplate();\n\n      $scope.lineTemplate             = initLineTemplate();\n      $scope.resetToZeroModel         = resetToZeroModel;\n      $scope.countConfigurationModelLines = countConfigurationModelLines;\n      $scope.setActiveLineNumber      = setActiveLineNumber;\n      $scope.upThisLine               = upThisLine;\n      $scope.downThisLine             = downThisLine;\n      $scope.addNewline               = addNewline;\n      $scope.removeThisLine           = removeThisLine;\n\n      $scope.increaseNumberOfColumns  = increaseNumberOfColumns;\n      $scope.decreaseNumberOfColumns  = decreaseNumberOfColumns;\n\n      $scope.resetStepCounter         = resetStepCounter;\n      $scope.nextConfigStep           = nextConfigStep;\n\n      $scope.previousConfigStep       = previousConfigStep;\n      $scope.stepReachable            = stepReachable;\n\n      //$scope.toggleAnimation          = toggleAnimation;\n\n      $scope.nyaSelect                = {};\n      //angular bootstrap modal + angular 1.4 issue (backdrop won't disapear on close modal)\n      //github issues here : https://github.com/angular-ui/bootstrap/issues/3633\n      //-> disabling animation untill correction in angular bootstrap \n      $scope.animationsEnabled        = easyFormSteWayConfig.getModalAnimationValue();\n      //call modal to edit selected control\n      $scope.showModalAddCtrlToColumn = showModalAddCtrlToColumn;\n\n      \n      $scope.formlyList               = {};\n      $scope.previewLoadedForm        = { fieldsModel:[] };\n      $scope.configurationLoaded      = {};   \n      $scope.previewExistingform      = previewExistingform;\n      $scope.saveThisForm             = saveThisForm; //should save to database (commented here)\n      $scope.returnSaveEvent          = false;\n      \n     \n\n\n   \n\n\n      \n\n      formFieldManage.initConfigurationEditFromScratch($scope.configuration);\n\n      controllerModalProxy.initNyaSelect($scope.nyaSelect);\n\n\n\n      function initDebugModel(){\n        return {\n         showDebug : false,\n         configurationModelNumberofLines : 1        \n        };\n      }\n\n      function initTabModel(){\n        var _tabInitialized = {\n          \n          editTab     : {\n            active : true\n          },\n          \n          previewTab  : {\n            active        : false,  \n            tabVisible    : easyFormSteWayConfig.isPreviewPanelVisible(),\n            modelsVisible : easyFormSteWayConfig.arePreviewModelsVisible()\n           }\n           \n        };\n        return _tabInitialized;\n      }\n\n      function previewExistingform(formlyform){\n       var configlines = JSON.parse(formlyform.formlyField);\n       //here to replace with $scope.configuration : initialise configuration with lines \n       $scope.configurationLoaded = {};\n       formFieldManage.bindConfigurationLines($scope.configurationLoaded,configlines);\n       formFieldManage.applyConfigurationToformlyModel($scope.configurationLoaded, $scope.previewLoadedForm.fieldsModel, $scope.vm.model);\n       $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n       $scope.previewLoadedForm.cancelButtonText = formlyform.cancelButtonText;\n       $scope.previewLoadedForm.submitButtonText = formlyform.submitButtonText;\n      }    \n\n      function onSubmit() {\n        toaster.pop({\n            type: 'info',\n            timeout:2000,\n            title: 'should save data model if it were not a static example',\n            body: 'data :' + $filter('json')($scope.vm.model, 4),                \n            showCloseButton: true\n        }); \n      }\n      \n      function initColumnTemplate(){\n        return  {\n          numColumn: -1,\n          exist:true, \n          control: {\n            type:'none',\n            key: 'none',\n            subtype: 'none',\n            // templateOptions: {\n            //                     label: 'none',\n            //                     placeholder: 'none',\n            //                     required: false,\n            //                     description: 'Descriptive text'\n            //                   }\n          }                                         \n        };\n      }\n\n      function initLineTemplate(){\n        return {\n          line:-1, \n          activeColumn : 1,\n          columns: [\n            {  \n              numColumn: 1,\n              exist:true, \n              control: {\n                type:'none',\n                key: 'none',\n                // templateOptions: {\n                //                     label: 'none',\n                //                     placeholder: 'none',\n                //                     required: false,\n                //                     description: 'Descriptive text'\n                //                   }\n                }\n              }\n            ]\n        };\n      }\n\n      function resetToZeroModel(){\n        $scope.configuration.activeLine = 1;\n        if ($scope.configuration.lines.length > 1) {\n          $scope.configuration.lines.splice(1, $scope.configuration.lines.length - 2);\n        }\n        return $scope.countConfigurationModelLines();\n      }\n\n      function countConfigurationModelLines(){\n        //information in debug model\n        $scope.debug.configurationModelNumberofLines = $scope.configuration.lines.length;\n        return $scope.configuration.lines.length;\n      }      \n\n      function setActiveLineNumber(lineNumber){\n        if (lineNumber <= $scope.countConfigurationModelLines()) {\n          $scope.configuration.activeLine = lineNumber;\n        }\n      } \n\n      function upThisLine(indexLine){    \n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine - 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine - 1), 0, currentLineObj);    \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);     \n      }  \n\n      function downThisLine(indexLine){\n        if (indexLine > -1) {\n          if ($scope.configuration.lines[indexLine + 1]) {\n            var currentLineObj = $scope.configuration.lines[indexLine];\n            $scope.configuration.lines.splice(indexLine , 1);\n            $scope.configuration.lines.splice((indexLine + 1), 0, currentLineObj);  \n            //manage selected aciveLine\n            $scope.configuration.activeLine = 1;\n          }\n        }     \n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);   \n      } \n\n      function addNewline(){\n        $scope.configuration.lines.push(\n          {\n            line:-1, \n            activeColumn : 1,\n            columns: [\n                      {  \n                        numColumn: 1,\n                        exist:true, \n                        control: {\n                                    type:'none',\n                                    key: 'none',\n                                    // templateOptions: {\n                                    //                     label: 'none',\n                                    //                     placeholder: 'none',\n                                    //                     required: false,\n                                    //                     description: 'Descriptive text'\n                                    //                   }\n                                  }\n                        }\n                      ]\n            }\n        );\n          //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields); \n      }\n\n      function removeThisLine(index){\n        if (index > -1) {\n          if ($scope.configuration.lines.length > 1) {\n              //manage selected aciveLine\n              if ($scope.configuration.activeLine === index + 1) {\n                $scope.configuration.activeLine = 1;\n              }\n              $scope.configuration.lines.splice(index, 1);\n          }else{\n            $timeout(function(){\n                toaster.pop({\n                        type: 'warning',\n                        title: 'Last line' ,\n                        body: 'Can\\'t delete the last line',                \n                        showCloseButton: true\n                  });\n            }, 100); \n          }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n        }\n      }\n\n      function increaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length < $scope.MaxNumberOfColumns) {\n\n          var newNumberOfColumns = $scope\n                                      .configuration\n                                      .lines[$scope.configuration.activeLine -1]\n                                      .columns\n                                      .push(\n                                            {\n                                              numColumn: -1,\n                                              exist: true, \n                                              control: {\n                                                          type:'none',\n                                                          key: 'none'\n                                                          // templateOptions: {\n                                                          //                     label: 'none',\n                                                          //                     placeholder: 'none',\n                                                          //                     required: false,\n                                                          //                     description: 'Descriptive text'\n                                                          //                   }\n                                                        }                                         \n                                             }                                        \n                                            );\n          $scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns[newNumberOfColumns - 1]\n              .numColumn = newNumberOfColumns; \n          }\n           //re-render formfield \n          formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model); \n          $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n      }  \n\n      function decreaseNumberOfColumns(){\n        if ($scope\n              .configuration\n              .lines[$scope.configuration.activeLine -1]\n              .columns.length > 1) {\n          $scope.configuration\n            .lines[$scope.configuration.activeLine -1]\n            .columns\n            .splice($scope.configuration.lines[$scope.configuration.activeLine -1].columns.length -1, 1);\n        }\n        //re-render formfield \n        formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);  \n\n        $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);  \n      }  \n\n      function resetStepCounter(){\n        $scope.configuration.configStepCounter = 0;\n      } \n\n      function nextConfigStep(){\n        var configStepCounterMAX = $scope.configuration.listConfigStep.length -1;\n        if ($scope.configuration.configStepCounter !== configStepCounterMAX) {\n            $scope.configuration.configStepCounter ++;\n        }    \n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }   \n\n      function previousConfigStep(){\n        if ($scope.configuration.configStepCounter !== 0) {\n          $scope.configuration.configStepCounter --;\n        }\n        setTrueThisStepIndicator($scope.configuration.configStepCounter);\n      }\n\n      function stepReachable(indexStep){\n        if (indexStep < $scope.configuration.configStepCounter) {\n          return 'disabled';\n        }else{\n          return 'enabled';\n        }\n      } \n\n      function showModalAddCtrlToColumn(size, indexLine, numcolumn) {\n\n          var modalInstance = $uibModal.open({\n                                          animation: $scope.animationsEnabled,\n                                          templateUrl: 'editModalTemplate.html',  \n                                          controller: 'ngwfWfEditMODALController',\n                                          size: 'lg',\n                                          resolve: {\n                                            nyaSelect: function () {\n                                              return controllerModalProxy\n                                                        .getNyASelectFromSelectedLineColumn($scope.nyaSelect, $scope.configuration,indexLine, numcolumn);\n                                            }\n                                          }\n        });\n\n        modalInstance.result.then(function (modalAddCtrlModel) {\n            controllerModalProxy.bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, $scope.configuration);\n            formFieldManage.applyConfigurationToformlyModel($scope.configuration, $scope.vm.wfFormFields, $scope.vm.model);\n            \n            $scope.vm.wfFormFieldsOnlyNeededProperties = angular.copy($scope.vm.wfFormFields);\n\n        }, function () {\n          //$log.info('Modal dismissed at: ' + new Date());\n        });\n      } \n\n      /**\n       * saveThisForm \n       * - SAVE to database (current stringified configuration model === current form)\n       */\n      function saveThisForm(){\n        if (typeof $scope.configuration.formName === 'undefined') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is undefined',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        if ($scope.configuration.formName === '') {\n        toaster.pop({\n                type: 'warning',\n                timeout:2000,\n                title: 'Form name is required',\n                body: 'Form has not been saved.',                \n                showCloseButton: true\n          });\n          return false;\n        }\n        toaster.pop({\n                type: 'wait',\n                timeout:10000,\n                title: 'Form is being saved',\n                body: 'Wait.',                \n                showCloseButton: true\n        });\n\n       \n        toaster.clear();  \n        \n\n        $scope.returnSaveEvent = true;\n        return true;\n      } \n\n\n\n\n      function resetAllIndicators(){\n        for (var i = $scope.configuration.stepIndicators.length - 1; i >= 0; i--) {\n          $scope.configuration.stepIndicators[i] = false;\n        }\n      }\n      \n      function setTrueThisStepIndicator(indexIndicator){\n          resetAllIndicators();\n          $scope.configuration.stepIndicators[indexIndicator] = true;    \n      }\n\n    }\t\t\t\n\t\t\t\n\t\t}\n\t\t\n})();\n\n/**\n *  ------------------------------------------------------\n *  directives container\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n;(function () {\n\t'use strict';\n\t\n\tangular\n\t\t.module('ngwfApp.directives', [\t\n\t\t\t'ngwfApp.directives.ngwfStRatioDirective',\n\t\t\t'ngwfApp.directives.edaStepWayEasyFormGenDirective' \n\t\t\t]);\n\n})(); \n\n\n\n/**\n *  ------------------------------------------------------\n *  simple directive to set width style attribute in %\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.directives.ngwfStRatioDirective', [])\n\t\t.directive('stRatio', stRatio);\n\n\t\tstRatio.$inject = [];\n\t\tfunction stRatio(){\n\n\t\t\tvar directive = {\n\t\t\t\tlink : linkfct\n\t\t\t};\n\n\t\t\treturn directive;\n\n\t\t\tfunction linkfct(scope, element, attr){\n\t\t\t\tvar ratio=+(attr.stRatio);\n\t\t\t  element.css('width',ratio+'%');\n\t\t\t}\n\n\t\t}\n\n})(); \n\n\n\n\n/**\n *  ------------------------------------------------------\n *  service : controllerModalProxy\n *  ------------------------------------------------------\n *\n *  service dedicated to - edit control - (controller modal proxy)\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n(function () {\n\t'use strict';\n\n\n\tangular\n\t\t.module('ngwfApp.services.ngwfEditCtrlControllerModalProxy', [])\n\t\t.factory('controllerModalProxy', controllerModalProxy);\n\n\t\tcontrollerModalProxy.$inject = ['easyFormSteWayConfig'];\n\t\tfunction controllerModalProxy(easyFormSteWayConfig){\n\t\t\t\n\t\t\tvar service = {\n\t\t\t\tinitNyaSelect \t\t\t\t\t\t\t\t\t\t\t\t\t: initNyaSelect,\n\t\t\t\tgetNyASelectFromSelectedLineColumn \t\t\t: getNyASelectFromSelectedLineColumn,\n\t\t\t\tbindConfigurationModelFromModalReturn \t: bindConfigurationModelFromModalReturn,\n\t\t\t\tapplyConfigToSelectedControl \t\t\t\t\t\t: applyConfigToSelectedControl,\n\t\t\t\tresetTemporyConfig \t\t\t\t\t\t\t\t\t\t\t: resetTemporyConfig,\n\t\t\t\tgetControlsDefinition \t\t\t\t\t\t\t\t\t: getControlsDefinition,\n\t\t\t\trefreshControlFormlyExpressionProperties: refreshControlFormlyExpressionProperties,\n\t\t\t\trefreshControlFormlyValidators\t\t\t\t\t: refreshControlFormlyValidators,\n\t\t\t\trefreshControlFormlyValidation\t\t\t\t\t: refreshControlFormlyValidation,\n\t\t\t\tgetFilteredNyaSelectObject\t\t\t\t\t\t\t: getFilteredNyaSelectObject\n\t\t\t};\n\t\t\t\n\t\t\treturn service;\n\n\n\t\t\tfunction initNyaSelect(nyaSelectObj){\n\t\t\t\treturn resetNyaSelect(nyaSelectObj);\n\t    }\n\n\t\t\t/**\n\t\t\t * get all controls definition (nyaSelectObj)\n\t\t\t * \n\t\t\t * needed to bind these properties :\n\t\t\t * \n\t\t\t * formlyExpressionProperties: {}, \n\t\t\t * formlyValidators: {},\n\t\t\t * formlyValidation                       \t\t\n\t\t\t */\n\t\t\tfunction getControlsDefinition(){\n\t\t\t\tvar controls = {};\n\t\t\t\tresetNyaSelect(controls);\t\n\t\t\t\treturn controls;\n\t\t\t}\n\t\t\t\n\t\t\t/**\n\t\t\t * loading forms will not be able to retrieve formlyExpressionProperties\n\t\t\t * -> here does the job\n\t\t\t */\n\t\t\tfunction refreshControlFormlyExpressionProperties(configurationModel){\n\t\t\t\t\n\t\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t\t//iterates lines\n\t\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t\t//----> update control formlyExpressionProperties property\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcolumn.control.formlyExpressionProperties = aControl.formlyExpressionProperties;\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t/**\n\t\t\t * loading forms will not be able to retrieve formlyValidators\n\t\t\t * -> here does the job\n\t\t\t */\t\t\t\n\t\t\tfunction refreshControlFormlyValidators(configurationModel){\n\t\t\t\t\n\t\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t\t//iterates lines\n\t\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t\t//----> update control formlyValidators property\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcolumn.control.formlyValidators = aControl.formlyValidators;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\t\t\t/**\n\t\t\t * loading forms will not be able to retrieve formlyValidation\n\t\t\t * -> here does the job\n\t\t\t */\t\t\t\n\t\t\tfunction refreshControlFormlyValidation(configurationModel){\n\t\t\t\n\t\t\t\tif (angular.isObject(configurationModel)) {\n\t\t\t\t\t//iterates lines\n\t\t\t\t\tangular.forEach(configurationModel.lines, function(line, indexLine){\n\t\t\t\t\t\tangular.forEach(line.columns, function(column, controlIndex){\n\t\t\t\t\t\t\tvar _controlsDefinition = getControlsDefinition();\n\t\t\t\t\t\t\tangular.forEach(_controlsDefinition.controls, function(aControl, aControlIndex){\n\t\t\t\t\t\t\t\tif (column.control.type === aControl.formlyType &&\n\t\t\t\t\t\t\t\t\t\tcolumn.control.subtype === aControl.formlySubtype) {\n\t\t\t\t\t\t\t\t\t\t//----> update control formlyValidation property\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tcolumn.control.formlyValidation = aControl.formlyValidation;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\t\t\t\t\t\n\t\t\t\t\n\t\t\t}\n\n\t\t\t\n\t    function getNyASelectFromSelectedLineColumn(nyaSelectObj, configurationObj, indexLine, numcolumn){\n\t      resetNyaSelect(nyaSelectObj);\n\t      /**\n\t       * data send to modal controller                                           \n\t       */\n\t      \n\t      if (typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions != 'undefined') {\n\n\t        nyaSelectObj.temporyConfig.selectedControl \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t\t\t\t\t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl : 'none';\n\t        nyaSelectObj.temporyConfig.formlyLabel \t\t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label : '';\n\t        nyaSelectObj.temporyConfig.formlyRequired \t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required : '';\n\t        nyaSelectObj.temporyConfig.formlyDesciption \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description : '';\n\t        nyaSelectObj.temporyConfig.formlyPlaceholder \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder : '';\n\t        nyaSelectObj.temporyConfig.formlyOptions \t\t\t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t!= 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options : '';\n\t\t\t\t\t\n\t\t\t\t\tnyaSelectObj.temporyConfig.formlyExpressionProperties = typeof configurationObj.lines[indexLine].columns[numcolumn].control.formlyExpressionProperties \t!= 'undefined' ? angular.copy(configurationObj.lines[indexLine].columns[numcolumn].control.formlyExpressionProperties) : {};\n\t\t\t\t\tnyaSelectObj.temporyConfig.formlyValidators \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidators \t\t\t\t\t\t\t\t\t\t!= 'undefined' ? angular.copy(configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidators) : {};\n\t\t\t\t\tnyaSelectObj.temporyConfig.formlyValidation \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidation \t\t\t\t\t\t\t\t\t\t!= 'undefined' ? angular.copy(configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidation) : {};\n\t\t\t\t\t\n\t\t\t\t\t/**\n\t\t\t\t\t * particular case : datepicker \n\t\t\t\t\t */\n\t        if (nyaSelectObj.temporyConfig.selectedControl === 'Date') {\n\t        \tnyaSelectObj.temporyConfig.datepickerPopup \t= typeof configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup != 'undefined' ? configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup : '';\n\t        }\n\t      }\n\t      return nyaSelectObj;\t    \t\n\t    }\n\n\t    function bindConfigurationModelFromModalReturn(indexLine, numcolumn, modalAddCtrlModel, configurationObj){\n\t\t\t\t\t      \n\t      var extractedProps = returnControlFromAddCtrlModalModel(modalAddCtrlModel);\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.selectedControl \t\t= extractedProps.selectedControl;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.type \t\t\t\t\t\t\t= extractedProps.formlyType;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.subtype \t\t\t\t\t\t= extractedProps.formlySubtype;\n\t      //reset templateOptions\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions \t\t= {\n\t                                                                                            label: '',\n\t                                                                                            required: false,\n\t                                                                                            description: '',\n\t                                                                                            placeholder: '',\n\t                                                                                            options: []\n\t                                                                                          };\n\t       //then bind templateOptions                                                                                   \n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.label \t\t\t = extractedProps.formlyLabel;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.required \t = extractedProps.formlyRequired;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.description = extractedProps.formlyDesciption;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.placeholder = extractedProps.formlyPlaceholder;\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.options \t\t = extractedProps.formlyOptions;\n\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.formlyExpressionProperties = angular.copy(extractedProps.formlyExpressionProperties);\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidators \t\t\t\t\t= angular.copy(extractedProps.formlyValidators);\n\t      configurationObj.lines[indexLine].columns[numcolumn].control.formlyValidation \t\t\t\t\t= angular.copy(extractedProps.formlyValidation);\n\n\t\t  \t//////////////////////////////////////////\n\t      // add additionnal particular properties\n\t      //////////////////////////////////////////\n\t      //-> datepicker : datepickerPopup\n\t      if (configurationObj.lines[indexLine].columns[numcolumn].control.type === 'datepicker') {\n\t       \tconfigurationObj.lines[indexLine].columns[numcolumn].control.templateOptions.datepickerPopup = extractedProps.datepickerPopup;\n\t      }\t\n\t      /**\n\t       * unique key (set only first time) in this model is formly control type + Date.now();  \n\t       */\n\t      var newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t      if (validKeyUniqueness(newKey, configurationObj) === true){\n\t        configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t      }else{\n\t      \t/**\n\t      \t * 2nd attempt \n\t      \t */\n\t        newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\n\t        if (validKeyUniqueness(newKey, configurationObj) === true){\n\t          configurationObj.lines[indexLine].columns[numcolumn].control.key = newKey;\n\t        }else{\n\t        \t/**\n\t        \t * 2nd attempt \n\t        \t */\n\t          newKey = configurationObj.lines[indexLine].columns[numcolumn].control.type + '-' + Date.now();\n\t        }\n\t      }                                                                     \n\t    \tconfigurationObj.lines[indexLine].columns[numcolumn].control.edited = true;\n\t  \t}\n\n\t  \tfunction applyConfigToSelectedControl(nyaSelectObj){\n\t\t  \t/**\n\t\t  \t * used in modal (edit control) \n\t\t  \t */\n\t\t    for (var i = nyaSelectObj.controls.length - 1; i >= 0; i--) {\n\t\t      if (nyaSelectObj.controls[i].id === nyaSelectObj.selectedControl) {\n\n\t\t          nyaSelectObj.controls[i].formlyLabel \t\t\t\t\t\t\t\t= nyaSelectObj.temporyConfig.formlyLabel;\n\t\t          nyaSelectObj.controls[i].formlyRequired \t\t\t\t\t\t= nyaSelectObj.temporyConfig.formlyRequired;\n\t\t          nyaSelectObj.controls[i].formlyDesciption \t\t\t\t\t= nyaSelectObj.temporyConfig.formlyDesciption;\n\t\t          nyaSelectObj.controls[i].formlyPlaceholder \t\t\t\t\t= nyaSelectObj.temporyConfig.formlyPlaceholder;\n\t\t          nyaSelectObj.controls[i].formlyOptions \t\t\t\t\t\t\t= nyaSelectObj.temporyConfig.formlyOptions;\n\n\t\t          if (nyaSelectObj.controls[i].id ==='Date' ) {\n\t\t          \tnyaSelectObj.controls[i].datepickerPopup \t\t\t\t\t= nyaSelectObj.temporyConfig.datepickerPopup;\n\t\t          }\n\t\t        \n\t\t       }\n\t\t    }\n\t\t  }\n\n\t\t  function resetTemporyConfig(){\n\t\t    return {\n\t              formlyLabel: '', \n\t              formlyRequired: false, \n\t              formlyPlaceholder: '',\n\t              formlyDesciption: '',\n\t              formlyOptions: []\n\t            }; \t\t  \t\n\t\t  }\n\n\t    /**\n\t     * return filtered list of controls object\n\t     */\n\t\t\tfunction getFilteredNyaSelectObject(){\n\t\t    var newNyaSelectObj = {\n\n\t\t                    controls : [\n\t\t                                {\n\t\t                                \tid: 'empty',  \n\t\t                                \tname: 'no control', \n\t\t                                \tsubtitle: 'no control', \n\t\t                                \tgroup: 'Blank', \n\t\t                                \tformlyType: 'blank', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {} \n\t\t                                },\n\n\t\t                                {id: 'Header',  name: 'Header', subtitle: 'no control', group: 'Decoration', formlyType: 'header', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\t\t                                {id: 'Subtitle',  name: 'Subtitle', subtitle: 'no control', group: 'Decoration', formlyType: 'subTitle', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\n\t\t                                {\n\t\t                                \tid: 'TextInput',  \n\t\t                                \tname: 'Text input', \n\t\t                                \tsubtitle: 'Text input', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'input', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Text input field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Password',  \n\t\t                               \t \tname: 'Password', \n\t\t                                \tsubtitle: 'Password', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'input', \n\t\t                                \tformlySubtype: 'password', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                              },\n\t\t                                \n\t\t                                {\n\t\t                                \tid \t\t\t\t\t\t\t\t\t\t\t\t\t: 'Email',  \n\t\t                                \tname \t\t\t\t\t\t\t\t\t\t\t\t: 'Email', \n\t\t                                \tsubtitle \t\t\t\t\t\t\t\t\t\t: 'Email', \n\t\t                                \tgroup \t\t\t\t\t\t\t\t\t\t\t: 'input', \n\t\t                                \tformlyType\t\t\t\t\t\t\t\t\t: 'input', \n\t\t                                \tformlySubtype \t\t\t\t\t\t\t: 'email', \n\t\t                                \tformlyLabel \t\t\t\t\t\t\t\t: '', \n\t\t                                \tformlyRequired \t\t\t\t\t\t\t: false, \n\t\t                                \tformlyDesciption \t\t\t\t\t\t: '', \n\t\t                                \tformlyOptions \t\t\t\t\t\t\t: [], \n\t\t                                \tformlyExpressionProperties \t: {}, \n\n\t\t                                \tformlyValidators \t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                \t\temailShape : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\texpression : function(viewValue, modelValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar value = modelValue || viewValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/.test(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\tmessage: '$viewValue + \\' is not a valid email\\''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        },\n\n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Email field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//check if validation is really dued to require validation \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//and not another validation like emailShape validator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tif (scope.to.required) return returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\t\t                                \n\t\t                                {\n\t\t                                \tid: 'Date',  \n\t\t                                \tname: 'Date', \n\t\t                                \tsubtitle: 'Date', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'datepicker', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tdatepickerPopup: 'dd-MMMM-yyyy', \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Date field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Texarea', \n\t\t                                \tname: 'Textarea', \n\t\t                                \tsubtitle: 'Textarea', \n\t\t                                \tgroup: 'Textarea', \n\t\t                                \tformlyType: 'textarea', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Textarea field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'RichTextEditor', \n\t\t                                \tname: 'RichTextEditor', \n\t\t                                \tsubtitle: 'RichTextEditor', \n\t\t                                \tgroup: 'Textarea', \n\t\t                                \tformlyType: 'richEditor', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t   \n\t\t                                \tformlyValidators \t\t\t\t\t\t: {},\n\n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this RichTextEditor field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Radio', \n\t\t                                \tname: 'Radio', \n\t\t                                \tsubtitle: 'Radio', \n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Radio', \n\t\t                                \tformlyType: 'radio', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '' , \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Checkbox', \n\t\t                                \tname: 'Checkbox', \n\t\t                                \tsubtitle: 'Checkbox', \n\t\t                                \tgroup: 'Checkbox', \n\t\t                                \tformlyType: 'checkbox', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Checkbox field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'BasicSelect', \n\t\t                                \tname: 'Basic select', \n\t\t                                \tsubtitle: 'Basic select',\n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Select', \n\t\t                                \tformlyType: 'basicSelect', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Basic select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'GroupedSelect', \n\t\t                                \tname: 'Grouped Select', \n\t\t                                \tsubtitle: 'Grouped Select',\n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Select', \n\t\t                                \tformlyType: 'groupedSelect', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '',\n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Grouped Select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                }\n\t\t                              ],\n\n\t\t                      selectedControl : 'none' ,\n\t\t                      temporyConfig : {\n\t\t                                        selectedControl: 'none',\n\t\t                                        formlyLabel: 'label', \n\t\t                                        formlyRequired: false, \n\t\t                                        formlyDesciption: '',\n\t\t                                        formlyPlaceholder: '',\n\t\t                                        formlyOptions : [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          //expressions/validation fields\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyValidation: {}                                        \n\t\t                                      } \n\n\t\t    };\n\n\t\t    //reset\n\t\t  \treturn angular.copy(filterDisabledControl(angular.copy(newNyaSelectObj)));\n\t\t\t\t\n\t\t\t}\n\n\t    /**\n\t     * init object : return unfiltered (from config) list of controls object true (if not true, you may have problem^^)\n\t     */\n\t\t  function resetNyaSelect(nyaSelectObj){\n\t\t    var newNyaSelectObj = {\n\n\t\t                    controls : [\n\t\t                                {\n\t\t                                \tid: 'empty',  \n\t\t                                \tname: 'no control', \n\t\t                                \tsubtitle: 'no control', \n\t\t                                \tgroup: 'Blank', \n\t\t                                \tformlyType: 'blank', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {} \n\t\t                                },\n\n\t\t                                {id: 'Header',  name: 'Header', subtitle: 'no control', group: 'Decoration', formlyType: 'header', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\t\t                                {id: 'Subtitle',  name: 'Subtitle', subtitle: 'no control', group: 'Decoration', formlyType: 'subTitle', formlySubtype: '', formlyLabel: '', formlyRequired: false, formlyDesciption: '', formlyOptions: [] , formlyExpressionProperties: {}, formlyValidators: {}, formlyValidation: {}},\n\n\t\t                                {\n\t\t                                \tid: 'TextInput',  \n\t\t                                \tname: 'Text input', \n\t\t                                \tsubtitle: 'Text input', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'input', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Text input field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Password',  \n\t\t                               \t \tname: 'Password', \n\t\t                                \tsubtitle: 'Password', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'input', \n\t\t                                \tformlySubtype: 'password', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [] , \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                              },\n\t\t                                \n\t\t                                {\n\t\t                                \tid \t\t\t\t\t\t\t\t\t\t\t\t\t: 'Email',  \n\t\t                                \tname \t\t\t\t\t\t\t\t\t\t\t\t: 'Email', \n\t\t                                \tsubtitle \t\t\t\t\t\t\t\t\t\t: 'Email', \n\t\t                                \tgroup \t\t\t\t\t\t\t\t\t\t\t: 'input', \n\t\t                                \tformlyType\t\t\t\t\t\t\t\t\t: 'input', \n\t\t                                \tformlySubtype \t\t\t\t\t\t\t: 'email', \n\t\t                                \tformlyLabel \t\t\t\t\t\t\t\t: '', \n\t\t                                \tformlyRequired \t\t\t\t\t\t\t: false, \n\t\t                                \tformlyDesciption \t\t\t\t\t\t: '', \n\t\t                                \tformlyOptions \t\t\t\t\t\t\t: [], \n\t\t                                \tformlyExpressionProperties \t: {}, \n\n\t\t                                \tformlyValidators \t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                \t\temailShape : {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\texpression : function(viewValue, modelValue) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar value = modelValue || viewValue;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn /^[a-z]+[a-z0-9._]+@[a-z]+\\.[a-z.]{2,5}$/.test(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\tmessage: '$viewValue + \\' is not a valid email\\''\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          \t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        },\n\n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Email field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//check if validation is really dued to require validation \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//and not another validation like emailShape validator\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tif (scope.to.required) return returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\t\t                                \n\t\t                                {\n\t\t                                \tid: 'Date',  \n\t\t                                \tname: 'Date', \n\t\t                                \tsubtitle: 'Date', \n\t\t                                \tgroup: 'input', \n\t\t                                \tformlyType: 'datepicker', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tdatepickerPopup: 'dd-MMMM-yyyy', \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Date field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Texarea', \n\t\t                                \tname: 'Textarea', \n\t\t                                \tsubtitle: 'Textarea', \n\t\t                                \tgroup: 'Textarea', \n\t\t                                \tformlyType: 'textarea', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Textarea field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'RichTextEditor', \n\t\t                                \tname: 'RichTextEditor', \n\t\t                                \tsubtitle: 'RichTextEditor', \n\t\t                                \tgroup: 'Textarea', \n\t\t                                \tformlyType: 'richEditor', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t   \n\t\t                                \tformlyValidators \t\t\t\t\t\t: {},\n\n\t\t                                \tformlyValidation: {\n\t\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this RichTextEditor field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Radio', \n\t\t                                \tname: 'Radio', \n\t\t                                \tsubtitle: 'Radio', \n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Radio', \n\t\t                                \tformlyType: 'radio', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '' , \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Password field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'Checkbox', \n\t\t                                \tname: 'Checkbox', \n\t\t                                \tsubtitle: 'Checkbox', \n\t\t                                \tgroup: 'Checkbox', \n\t\t                                \tformlyType: 'checkbox', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Checkbox field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'BasicSelect', \n\t\t                                \tname: 'Basic select', \n\t\t                                \tsubtitle: 'Basic select',\n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Select', \n\t\t                                \tformlyType: 'basicSelect', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '', \n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Basic select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                },\n\n\t\t                                {\n\t\t                                \tid: 'GroupedSelect', \n\t\t                                \tname: 'Grouped Select', \n\t\t                                \tsubtitle: 'Grouped Select',\n\t\t                                \toptions: [], \n\t\t                                \tgroup: 'Select', \n\t\t                                \tformlyType: 'groupedSelect', \n\t\t                                \tformlySubtype: '', \n\t\t                                \tformlyLabel: '', \n\t\t                                \tformlyRequired: false, \n\t\t                                \tformlyDesciption: '',\n\t\t                                \tformlyOptions: [], \n\t\t                                \tformlyExpressionProperties: {}, \n\t\t                                \tformlyValidators: {}, \n\t                                \t\tformlyValidation: {\n\t\t\t\t\t                                \t\t          messages: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            required: function(viewValue, modelValue, scope) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//return a required validation message : \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> '<label as name> is required '\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\t//-> or if not exists or empty just 'this field is required'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar defaultReturnMsg = 'this Grouped Select field is required';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\tvar returnMsg = (typeof scope.to.label !== 'undefined') ? ((scope.to.label !== '') ? scope.to.label + ' is required' : defaultReturnMsg) : defaultReturnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t              \t\treturn returnMsg;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t            \t\t}\n\t\t\t\t\t                                \t\t\t\t\t\t\t\t\t\t\t\t}\n\t                                \t\t\t\t\t\t\t\t\t\t}\n\t\t                                }\n\t\t                              ],\n\n\t\t                      selectedControl : 'none' ,\n\t\t                      temporyConfig : {\n\t\t                                        selectedControl: 'none',\n\t\t                                        formlyLabel: 'label', \n\t\t                                        formlyRequired: false, \n\t\t                                        formlyDesciption: '',\n\t\t                                        formlyPlaceholder: '',\n\t\t                                        formlyOptions : [],\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          //expressions/validation fields\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyExpressionProperties: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyValidators: {},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          formlyValidation: {}                                        \n\t\t                                      } \n\n\t\t    };\n\n\t\t    //reset\n\t\t  \tangular.copy(newNyaSelectObj, nyaSelectObj);\n\t\t    return true;\n\t\t  }\n\t\t\t\n\t\t\tfunction filterDisabledControl(nyaSelectObj){\n\t\t\t\tvar listAllEnabledControl = easyFormSteWayConfig.getListEnabledControl();\n\t\t\t\tvar filteredNyaList = [];\n\t\t\t\t\n\t\t\t\tangular.forEach(listAllEnabledControl, function(enabledControl){\n\t\t\t\t\t\n\t\t\t\t\tangular.forEach(nyaSelectObj.controls, function(nyaControl){\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tif ((nyaControl.id === enabledControl.name) &&\n\t\t\t\t\t\t\t\t(enabledControl.enabled === true)) {\n\t\t\t\t\t\t\tfilteredNyaList = filteredNyaList.concat(nyaControl);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t});\n\t\t\t\treturn filteredNyaList;\n\t\t\t}\n\t\t  /**\n\t\t   * data passed back to parent controller \n\t\t   * after control being finsihed editing in modal\n\t\t   */\n\t\t  function returnControlFromAddCtrlModalModel(CtrlModalModel){\n\n\t\t    var modelToReturn = {\n\t\t          selectedControl:'none', \n\t\t          formlyType : 'none',\n\t\t          formlySubtype: 'none',\n\t\t          formlyLabel: '',\n\t\t          formlyRequired : false,\n\t\t          formlyDesciption: '',\n\t\t          formlyPlaceholder: '',\n\t\t          formlyOptions: [],\n\t\t          //validation fields\n\t\t          formlyExpressionProperties: {},\n\t\t          formlyValidators: {},\n\t\t          formlyValidation: {}\n\t\t    };\n\n\n\t\t    for (var i = CtrlModalModel.controls.length - 1; i >= 0; i--) {\n\t\t      if (CtrlModalModel.selectedControl === CtrlModalModel.controls[i].id) {\n\t\t        modelToReturn.selectedControl \t\t= CtrlModalModel.selectedControl;\n\t\t        modelToReturn.formlyType \t\t\t\t\t= CtrlModalModel.controls[i].formlyType;\n\t\t        modelToReturn.formlySubtype \t\t\t= CtrlModalModel.controls[i].formlySubtype;\n\t\t        modelToReturn.formlyLabel \t\t\t\t= CtrlModalModel.controls[i].formlyLabel;\n\t\t        modelToReturn.formlyRequired \t\t\t= CtrlModalModel.controls[i].formlyRequired;\n\t\t        modelToReturn.formlyDesciption \t\t= CtrlModalModel.controls[i].formlyDesciption;\n\t\t        modelToReturn.formlyPlaceholder \t= CtrlModalModel.controls[i].formlyPlaceholder;\n\t\t        modelToReturn.formlyOptions \t\t\t= CtrlModalModel.controls[i].formlyOptions;\n\n\t\t        modelToReturn.formlyExpressionProperties \t= angular.copy(CtrlModalModel.controls[i].formlyExpressionProperties);\n\t\t        modelToReturn.formlyValidators \t\t\t\t\t\t= angular.copy(CtrlModalModel.controls[i].formlyValidators);\n\t\t        modelToReturn.formlyValidation \t\t\t\t\t\t= angular.copy(CtrlModalModel.controls[i].formlyValidation);\n\n\t\t        //particular properties \n\t\t        //datetpicker format\n\t\t        if (CtrlModalModel.controls[i].formlyType === 'datepicker') {\n\t\t\t\t\tmodelToReturn.datepickerPopup \t\t\t\t\t\t\t= CtrlModalModel.controls[i].datepickerPopup;   \n\t\t\t\t\t  \t\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t    return modelToReturn;\n\t\t  }\n\t\t\t/**\n\t\t\t * validKeyUniqueness\n\t\t\t * to be sure the \"keys\" are unique (in same formly field model)\n\t\t\t */\n\t\t  function validKeyUniqueness(thisKey, configurationObj){\n\t\t    var isUnique = true;\n\t\t    //each lines\n\t\t    for (var i = configurationObj.lines.length - 1; i >= 0; i--) {\n\t\t      //each columns\n\t\t      for (var j = configurationObj.lines[i].columns.length - 1; j >= 0; j--) {\n\t\t        if (configurationObj.lines[i].columns[j].control.key === thisKey) {\n\t\t          isUnique = false;\n\t\t        }\n\t\t          \n\t\t      }\n\t\t      \n\t\t    }\n\n\t\t    return isUnique;  \n\t\t  }  \n\n\t\t}\n\n})(); \n\n/**\n *  ------------------------------------------------------\n *  service : formFieldManage\n *  ------------------------------------------------------\n *\n *         MOST IMPORTANT service to manage formly field model \n *  (the presentation model and the back model or configuration model)\n * \n *\n *  - \"formlyModel\" is the model exposed to view or html \"fields model\" (= an array of objects)\n *    This model is the one you can see in all well documented examples here : http://angular-formly.com\n *    -> in your view or html : <formly-form model=\"dataModel\" fields=\"formlyModel\">\n *\n *  - \"configurationModel\" is the model on which editing a form will work\n *    before applying results to \"formlyModel\"\n *\n *\n * NOTE : if you save a form to database, you will save \"configurationModel\" rather than \"formlyModel\".\n *        Why? : \n *          since as you plan to create a form generator you can't create a finite model\n *          since you may want to be able to save the generated form even if it is not a finite model\n *          since \"formlyModel\" objects will be populated with a lot of properties you don't need to store contrary to \"configurationModel\" which contains only what you need\n *          since \"formlyModel\" can't be JSON.stringify when you want to use advanced layout (1 column/2/3 columns template?)\n *          since it is better approach to use a backgroundModel (async operation ...) that is bind to presentation model only when it is fully ready or filled.\n *\n *\n * NOTE : \n * - if you want to manage more columns templates (right now only manage up to 3 columns), just inspire from existing code\n * - if you want to extend easy form generator, be sure to be a minimum comfortable with \"angular formly\": http://angular-formly.com\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n  'use strict';\n\n\n\n\n  angular\n    .module('ngwfApp.services.formFieldManage', [])\n    .factory('formFieldManage', formFieldManage);\n\n    formFieldManage.$inject = [];\n\n    function formFieldManage(){\n\n      var service = {\n        initConfigurationEditFromScratch : initConfigurationEditFromScratch,\n        bindConfigurationLines           : bindConfigurationLines,\n        applyConfigurationToformlyModel  : applyConfigurationToformlyModel \n      };\n      return service;\n\n\n      function initConfigurationEditFromScratch(configurationModel){\n        var configurationModelInit = {\n          activeLine: 1,   \n          listConfigStep: [\n                            'init',\n                            'first',\n                            'second',\n                            'third'\n                          ],\n          stepIndicators:  [\n                              true,\n                              false,\n                              false,\n                              false\n                            ], \n          configStepCounter : 0, \n          submitButtonText  : 'submit',\n          cancelButtonText  : 'cancel',\n          lines: [\n                  {\n                    line:1,                                       \n                    activeColumn : 1,\n                    columns: [\n                              {  \n                                numColumn: 1,\n                                exist:true, \n                                control: {\n                                            type:'none',\n                                            key: 'none',\n                                            // templateOptions: {\n                                            //                     label: 'none',\n                                            //                     placeholder: 'none',\n                                            //                     required: false,\n                                            //                     description: 'Descriptive text'\n                                            //                   }\n                                          }\n                                }\n                              ]\n                   }                                 \n              ]\n        };\n        angular.copy(configurationModelInit, configurationModel);                         \n      }\n\n      function bindConfigurationLines(configurationModel, lines){\n        if( Object.prototype.toString.call(lines) === '[object Array]' ) {\n          var configurationModelResult = {\n            activeLine: 1,   \n            listConfigStep: [\n                              'init',\n                              'first',\n                              'second',\n                              'third'\n                            ],\n            stepIndicators:  [\n                                true,\n                                false,\n                                false,\n                                false\n                              ], \n            configStepCounter: 0, \n            submitButtonText : 'submit',\n            cancelButtonText: 'cancel',\n            lines: []\n          };\n          configurationModelResult.lines = [].concat(lines);  \n                    \n          angular.copy(configurationModelResult, configurationModel);                                         \n\n          return getMessageObject('configuration model is bound','lines are bound to configuration model.');\n        }else{\n          return getErrorObject('lines is not an array', 'Checks lines type, it is not an array.');\n        }\n      }\n\n      function applyConfigurationToformlyModel(configurationModel, formlyModel, formlyDataModel){\n        resetFormlyModel(formlyModel);\n        resetDataModel(formlyDataModel);\n        /**\n         * manage header here line0 \n         */\n        var lineNumber = configurationModel.lines.length;\n        for (var i = 0; i < lineNumber; i++) {\n            //1 column line control\n            if (configurationModel.lines[i].columns.length === 1) {\n              //test if template control = header\n              if (configurationModel.lines[i].columns[0].control.type === 'header') {\n                addOneColumnHeader(formlyModel, configurationModel, i);\n              }else{\n                addOneColumnControl(formlyModel, configurationModel, i);  \n              }          \n            }\n            if (configurationModel.lines[i].columns.length === 2) {\n              addTwoColumnControl(formlyModel, configurationModel,i);\n            }\n            if (configurationModel.lines[i].columns.length === 3) {\n              addThreeColumnControl(formlyModel, configurationModel,i);\n            }\n        }\n      }\n\n      function resetFormlyModel(formlyModel){\n        var resetformly = [];\n        angular.copy(resetformly, formlyModel);\n      }\n\n\n\n      function addOneColumnHeader(formlyModel, configurationModel,lineIndex){\n        /**\n         * text header is stored in \"description\" in templateOtion model \n         */\n        var headerTemplateCol0 = '<div class=\"row\"><div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2></div></div><hr/>';\n\n        formlyModel.push(\n          {\n            template: typeof configurationModel\n                                    .lines[lineIndex]\n                                    .columns[0]\n                                    .control\n                                    .type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'header' ? headerTemplateCol0 : '<div></div>') : '<div></div>'\n          }\n        );\n      }\n\n      function addDatepickerPopupProperty(fieldToPush, configurationModel,lineIndex){\n          fieldToPush.templateOptions.datepickerPopup = extractTemplateOptionDatepickerPopup(configurationModel.lines[lineIndex].columns[0].control);\n      }\n\n      function addOneColumnControl(formlyModel, configurationModel,lineIndex){\n        var fieldToPush = {\n          className: 'col-xs-12',\n          type: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n          key: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n          templateOptions: {\n            type                  : extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n            label                 : extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n            required              : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n            placeholder           : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n            description           : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n            options               : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n          },\n          expressionProperties  : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n          validators            : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n          validation            : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)\n        };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n          addDatepickerPopupProperty(fieldToPush, configurationModel,lineIndex);\n        }     \n\n        formlyModel.push( \n          fieldToPush\n        );\n      }    \n\n      function addTwoColumnControl(formlyModel, configurationModel,lineIndex){\n\n        //text header is stored in \"description\" in templateOtion model\n        var headerTemplateCol0 =  {\n                                    className: 'col-xs-6',\n                                    template : '<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var headerTemplateCol1 =  {\n                                    className: 'col-xs-6',\n                                   template:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var controlCol0 =     {\n            className: 'col-xs-6',\n            type: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n            key: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n            templateOptions: {\n                type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n                label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n                required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n                placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n                description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n                options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)\n            },\n                expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n                validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n                validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)                                  \n          };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol0, configurationModel,lineIndex);\n        }                            \n\n        var controlCol1 =  {\n                  className: 'col-xs-6',\n                  type: typeof configurationModel.lines[lineIndex].columns[1].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[1].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[1].control.type) : 'blank',\n                  key: typeof configurationModel.lines[lineIndex].columns[1].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[1].control.key : 'blank' + Date.now(),\n                  templateOptions: {\n                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[1].control),\n                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[1].control),\n                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[1].control),\n                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[1].control),\n                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control),\n                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[1].control)\n                  },\n                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[1].control),\n                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[1].control),\n                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[1].control)                                  \n          };\n\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol1, configurationModel,lineIndex);\n        }                                \n\n        var FieldGroup = [];\n\n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol0);\n        }else{\n          FieldGroup.push(controlCol0);\n        }\n         \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol1);\n        }else{\n          FieldGroup.push(controlCol1);\n        }    \n\n        formlyModel.push(\n           {\n              className: 'row', \n              fieldGroup: FieldGroup\n            }\n        );\n      }\n\n      function addThreeColumnControl(formlyModel, configurationModel,lineIndex){\n        //text header is stored in \"description\" in templateOtion model\n        var headerTemplateCol0 =  {\n                                    className: 'col-xs-4',\n                                    template : '<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var headerTemplateCol1 =  {\n                                    className: 'col-xs-4',\n                                   template:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control) + '<h2><hr/></div></div>'\n                                  };\n\n        var headerTemplateCol2 =  {\n                                    className: 'col-xs-4',\n                                   template:'<div class=\"row\"><div class=\"\"><h2 class=\"text-center\">' + extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[2].control) + '<h2><hr/></div></div>'\n                                  };\n      \n        var controlCol0 =     {\n                                  className: 'col-xs-4',\n                                  type: typeof configurationModel.lines[lineIndex].columns[0].control.type !== 'undefined' ? (configurationModel.lines[lineIndex].columns[0].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[0].control.type): 'blank',\n                                  key: typeof configurationModel.lines[lineIndex].columns[0].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[0].control.key : 'blank' + Date.now(),\n                                  templateOptions: {\n                                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[0].control),\n                                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[0].control),\n                                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[0].control),\n                                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[0].control),\n                                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[0].control),\n                                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[0].control)                                              \n                                  },\n                                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[0].control),\n                                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[0].control),\n                                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[0].control)                                   \n                                };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol0, configurationModel,lineIndex);\n        }                             \n\n        var controlCol1 =  {\n                                  className: 'col-xs-4',\n                                  type: typeof configurationModel.lines[lineIndex].columns[1].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[1].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[1].control.type) : 'blank',\n                                  key: typeof configurationModel.lines[lineIndex].columns[1].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[1].control.key : 'blank' + Date.now(),\n                                  templateOptions: {\n                                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[1].control),\n                                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[1].control),\n                                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[1].control),\n                                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[1].control),\n                                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[1].control),\n                                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[1].control)                                               \n                                  },\n                                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[1].control),\n                                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[1].control),\n                                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[1].control)                                  \n                          };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol1, configurationModel,lineIndex);\n        }                       \n        var controlCol2 =  {\n                                  className: 'col-xs-4',\n                                  type: typeof configurationModel.lines[lineIndex].columns[2].control.type !== 'undefined' ?  (configurationModel.lines[lineIndex].columns[2].control.type === 'none' ? 'blank': configurationModel.lines[lineIndex].columns[2].control.type) : 'blank',\n                                  key: typeof configurationModel.lines[lineIndex].columns[2].control.key !== 'undefined' ?  configurationModel.lines[lineIndex].columns[2].control.key : 'blank' + Date.now(),\n                                  templateOptions: {\n                                      type: extractTemplateOptionType(configurationModel.lines[lineIndex].columns[2].control),\n                                      label: extractTemplateOptionLabel(configurationModel.lines[lineIndex].columns[2].control),\n                                      required : extractTemplateOptionRequired(configurationModel.lines[lineIndex].columns[2].control),\n                                      placeholder : extractTemplateOptionPlaceholder(configurationModel.lines[lineIndex].columns[2].control),\n                                      description : extractTemplateOptionDescription(configurationModel.lines[lineIndex].columns[2].control),\n                                      options : extractTemplateOptionOptions(configurationModel.lines[lineIndex].columns[2].control)                                              \n                                  },\n                                      expressionProperties : extractFormlyExpressionProperties(configurationModel.lines[lineIndex].columns[2].control),\n                                      validators : extractFormlyValidators(configurationModel.lines[lineIndex].columns[2].control),\n                                      validation : extractFormlyValidation(configurationModel.lines[lineIndex].columns[2].control)                                   \n                          };\n        //////////////////////////////////////////////                  \n        //datepicker additionnal particular property  \n        //////////////////////////////////////////////                  \n        if (configurationModel.lines[lineIndex].columns[2].control.type === 'datepicker') {\n          addDatepickerPopupProperty(controlCol2, configurationModel,lineIndex);\n        }     \n\n        var FieldGroup = [];\n\n        if (configurationModel.lines[lineIndex].columns[0].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol0);\n        }else{\n          FieldGroup.push(controlCol0);\n        }\n         \n        if (configurationModel.lines[lineIndex].columns[1].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol1);\n        }else{\n          FieldGroup.push(controlCol1);\n        }    \n\n        if (configurationModel.lines[lineIndex].columns[2].control.type === 'header') {\n          FieldGroup.push(headerTemplateCol2);\n        }else{\n          FieldGroup.push(controlCol2);\n        }    \n\n\n        formlyModel.push(\n           {\n              className: 'row', \n              fieldGroup: FieldGroup\n            }\n        );\n      }\n\n      function isTemplateOptionDefined(obj){\n        return typeof obj.templateOptions !== 'undefined' ? true : false;\n      }\n\n      function extractTemplateOptionLabel(obj){\n       return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.label !== 'undefined'? obj.templateOptions.label: '') : '';\n      }\n\n\n      function extractTemplateOptionDatepickerPopup(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.datepickerPopup !== 'undefined'? obj.templateOptions.datepickerPopup: '') : '';\n      }\n\n      function extractFormlyExpressionProperties(obj){\n        return  typeof obj.formlyExpressionProperties !== 'undefined' ? angular.copy(obj.formlyExpressionProperties) : {};\n      }\n\n      function extractFormlyValidators(obj){\n        return  typeof obj.formlyValidators !== 'undefined' ? angular.copy(obj.formlyValidators): {};\n      }\n\n      function extractFormlyValidation(obj){\n        return  typeof obj.formlyValidation !== 'undefined' ?  angular.copy(obj.formlyValidation) : {};\n      }\n\n      function extractTemplateOptionRequired(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.required !== 'undefined'? obj.templateOptions.required: '') : '';\n      }\n\n      function extractTemplateOptionOptions(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.options !== 'undefined'? obj.templateOptions.options: '') : '';\n      }\n\n      function extractTemplateOptionType(obj){\n        return  typeof obj.subtype !== 'undefined'? obj.subtype: '';\n      }\n\n      function extractTemplateOptionPlaceholder(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.placeholder !== 'undefined'? obj.templateOptions.placeholder: '') : '';\n      }\n\n      function extractTemplateOptionDescription(obj){\n        return  typeof obj.templateOptions !== 'undefined' ? (typeof obj.templateOptions.description !== 'undefined'? obj.templateOptions.description: '') : '';\n      }\n\n      function resetDataModel(obj){\n        var emptyDataModel = {};\n        angular.copy(emptyDataModel, obj);\n        return true;\n      }\n\n      function getErrorObject(errorTitle, errorMessage){\n\n        var messageObj = {\n          noError : false,\n          title: '',\n          Message: ''  \n        };\n\n        messageObj.noError = false;\n        messageObj.title = errorTitle;\n        messageObj.Message = errorMessage;\n        return messageObj;\n      }\n\n      function getMessageObject(messageTitle, messageBody){\n        var messageObj = {\n          noError : false,\n          title: '',\n          Message: ''  \n        };\n\n        messageObj.noError = true;\n        messageObj.title = messageTitle;\n        messageObj.Message = messageBody;\n        return messageObj;\n      }    \n\n\n    }\n\n\n\n})(); \n\n/**\n *  ------------------------------------------------------\n *  service to manage select options (used in modal to edit control)\n *  ------------------------------------------------------\n *\n *  module = \"service\"  selectOptionManage (manage : selects, radio...)\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function() {\n  'use strict';\n\n\n  angular\n    .module('ngwfApp.services.selectOptionManage', [])\n    .factory('selectOptionManage', selectOptionManage);\n\n    selectOptionManage.$inject = [];\n    function selectOptionManage(){\n      var service = {\n        testMe                    : testMe,\n        initModel                 : initModel,\n        isOptionUnique            : isOptionUnique,\n        isOptionValidFormat       : isOptionValidFormat,\n        addNewOptionRadio         : addNewOptionRadio,\n        addNewOptionBasicSelect   : addNewOptionBasicSelect,\n        addNewOptionGroupedSelect : addNewOptionGroupedSelect,\n        removeOption              : removeOption,\n        upthisOption              : upthisOption,\n        downthisOption            : downthisOption,\n      };\n      return service;\n\n      /**\n       * just a test function\n       */\n      function testMe(){\n        return 'selectOptionManage is here.';\n      }\n      /**\n       * reset model\n       */\n      function initModel(selectObj){\n        resetModel(selectObj);\n      }\n\n      function isOptionUnique(selectObj, textValue){\n        for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n          if (selectObj.rows[i].option === textValue) return false;\n        }\n        return true;\n      }\n\n      function isOptionValidFormat(textValue){\n        if (textValue !== '')  return true;\n        return false;\n      }\n\n      function addNewOptionRadio(selectObj, newOptionText){\n        var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };\n\n        var checkResult = validOption(selectObj, newOptionText);  \n        if (checkResult.resultFlag === true){\n\n            var newOption = {\n                                option: newOptionText,\n                                order: selectObj.rows.length\n                            };\n\n            selectObj.rows.push(newOption);\n            fullResponse.resultFlag = true;\n            fullResponse.details = '';\n            return fullResponse;\n        }else{\n              angular.copy(checkResult, fullResponse);                    \n              return fullResponse;                        \n        }\n      }\n\n      function addNewOptionBasicSelect(selectObj, newOptionText){\n          var fullResponse = {\n                                resultFlag : false,\n                                details : ''\n                              };\n\n          var checkResult = validOption(selectObj, newOptionText);  \n          if (checkResult.resultFlag === true){\n\n              var newOption = {\n                                  option: newOptionText,\n                                  order: selectObj.rows.length\n                              };\n\n              selectObj.rows.push(newOption);\n              fullResponse.resultFlag = true;\n              fullResponse.details = '';\n              return fullResponse;\n          }else{\n                angular.copy(checkResult, fullResponse);                    \n                return fullResponse;                        \n          }\n      }\n\n      function addNewOptionGroupedSelect(selectObj, newOptionText, newOptionGroup){\n        var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };\n\n        var checkResult = validOption(selectObj, newOptionText);  \n    \n        if (checkResult.resultFlag === true){\n\n            var newOption = {\n                                option: newOptionText,\n                                group: newOptionGroup,\n                                order: selectObj.rows.length\n                            };\n\n            selectObj.rows.push(newOption);\n            fullResponse.resultFlag = true;\n            fullResponse.details = '';\n            return fullResponse;\n        }else{\n              angular.copy(checkResult, fullResponse);                    \n              return fullResponse;                        \n        }\n      }\n\n      function removeOption(selectObj, AtIndex) {\n        var fullResponse = {\n                            resultFlag : false,\n                            details : ''\n                          };\n\n        if (AtIndex !== -1) {\n            selectObj.rows.splice(AtIndex, 1);\n            fullResponse.resultFlag = true;\n            fullResponse.details= '';\n            return fullResponse;\n        }else{\n            fullResponse.resultFlag = false;\n            fullResponse.details= 'Option index not valid';\n            return fullResponse;\n        }\n      }\n\n      function upthisOption(selectObj, indexOption){\n          var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };  \n\n          if (indexOption > -1) {\n            if (indexOption > 0) {\n              if (selectObj.rows[indexOption - 1]) {\n                var currentOption = selectObj.rows[indexOption];\n                selectObj.rows.splice(indexOption , 1);\n                selectObj.rows.splice((indexOption - 1), 0, currentOption); \n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n                return fullResponse;\n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Can\\'t retreive option from option index';\n                return fullResponse;\n              }\n            }else{\n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n                return fullResponse;\n            }  \n          }else{\n            fullResponse.resultFlag = false;\n            fullResponse.details = 'Option index not valid';\n            return fullResponse;\n          }\n      }\n\n      function downthisOption(selectObj, indexOption){\n          var fullResponse = {\n                              resultFlag : false,\n                              details : ''\n                            };\n\n          if (indexOption > -1) {\n            if (indexOption < selectObj.rows.length - 1){\n              if (selectObj.rows[indexOption + 1]) {\n                var currentOption = selectObj.rows[indexOption];\n                selectObj.rows.splice(indexOption , 1);\n                selectObj.rows.splice((indexOption + 1), 0, currentOption);  \n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n                return fullResponse;  \n              }else{\n                fullResponse.resultFlag = false;\n                fullResponse.details = 'Can\\'t retreive option from option index';\n                return fullResponse;\n              }\n            }else{ \n                fullResponse.resultFlag = true;\n                fullResponse.details = '';\n              return fullResponse;\n            }\n          }else{\n            fullResponse.resultFlag = false;\n            fullResponse.details = 'Option index not valid';\n            return fullResponse;\n          }\n      }\n\n\n\n\n\n\n      function validOption(selectObj, newOptionText){\n          var fullResponse = {\n                                resultFlag  : false,\n                                details     : ''\n                              };\n\n          if (typeof newOptionText === 'undefined') {\n              fullResponse.resultFlag = false;\n              fullResponse.details    = 'Entered option is empty';\n              return fullResponse;\n          }\n\n          if (newOptionText !== '') {\n                for (var i = selectObj.rows.length - 1; i >= 0; i--) {\n                  if (selectObj.rows[i].option === newOptionText) {\n                    fullResponse.resultFlag = false;\n                    fullResponse.details    = 'Entered option is not unique';\n                    return fullResponse;\n                  }\n                }\n                fullResponse.resultFlag = true;\n                fullResponse.details    = '';\n                return fullResponse;\n          }\n          fullResponse.resultFlag = false;     \n          fullResponse.details    = 'Entered option is empty';\n          return fullResponse;\n      }\n\n      function resetModel(selectObj){\n        var zeroModel = { rows:[] };\n        angular.copy(zeroModel, selectObj);\n      }\n  }\n\n\n})(); \n/**\n *  ------------------------------------------------------\n *  module = \"services\" container\n *  ------------------------------------------------------\n *\n * contains all app services\n *\n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t'use strict';\n\n\tangular.module(\n\t\t\t\t\t\t\t\t\t'ngwfApp.services', [\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.formFieldManage',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.selectOptionManage',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'ngwfApp.services.ngwfEditCtrlControllerModalProxy'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t);\n\n})(); \n\n\n/**\n *  ------------------------------------------------------\n *  filters container\n *  ------------------------------------------------------\n *\n * \n * ——————————————————————————————————————————————\n * MIT (2015) - Erwan Datin (MacKentoch)\n * https://github.com/MacKentoch/easyFormGenerator\n * ——————————————————————————————————————————————\n**/\n\n;(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('ngwfApp.filters', []);\n\n})(); \n\n\n\n})(this);"
  ],
  "sourceRoot": "/source/"
}